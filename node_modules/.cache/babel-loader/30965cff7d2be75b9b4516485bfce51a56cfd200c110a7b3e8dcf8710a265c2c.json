{"ast":null,"code":"var _jsxFileName = \"E:\\\\ssms\\\\website_plant\\\\src\\\\pages\\\\carts\\\\Carts.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"../../components/header/Header\";\nimport Footer from \"../../components/footer/Footer\";\nimport React, { useState, useEffect } from 'react';\nimport \"./carts.scss\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fa1, fa2, fa3, faCartShopping, faCheck, faChevronRight, faCircle, faMoneyBill1Wave, faSpa, faStar, faTree } from '@fortawesome/free-solid-svg-icons';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { readApiCart, updateApiCart } from \"../../Api\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Carts(_ref) {\n  _s();\n  let {\n    isLoggedIn,\n    username,\n    id\n  } = _ref;\n  // chứa các sản phẩm có id trùng với client\n  const [carts, setCarts] = useState([]);\n  const [totalMoney, setTotalMoney] = useState(0);\n  const [quantities, setQuantities] = useState([]);\n  // tạo kết nối\n  useEffect(() => {\n    fetch(`${readApiCart}?id_owner=${id}`).then(response => response.json()).then(data => {\n      setCarts(data);\n      const newQuantities = {};\n      data.forEach(cart => {\n        newQuantities[cart.id_plant] = cart.quantity; // Lưu quantity theo cart id\n      });\n\n      setQuantities(newQuantities); // Cập nhật state quantities\n    });\n  }, [quantities]);\n\n  // cập nhật tổng số tiền\n  useEffect(() => {\n    updateTotalMoney();\n  }, [quantities]);\n  const updateTotalMoney = () => {\n    let total = 0;\n    carts.forEach(cart => {\n      const quantity = quantities[cart.id_plant] || cart.quantity;\n      total += cart.price_product * quantity;\n    });\n    setTotalMoney(total);\n  };\n\n  // giảm số lượng sản phẩm đi 1\n  const idString = id.toString();\n  const decreaseQuantity = (id, id_plant, cart) => {\n    let count = 0;\n    // Gửi request GET đến API để lấy dữ liệu hiện tại\n    fetch(readApiCart).then(response => response.json()).then(data => {\n      // Kiểm tra xem sản phẩm đã tồn tại trong giỏ hàng chưa\n      const existingCartItem = data.find(item => item.id_owner === idString && item.id_plant === id_plant);\n      if (existingCartItem) {\n        count = parseInt(existingCartItem.quantity, 10);\n        if (count === 0) {} else {\n          count = count - 1;\n          const formData2 = new FormData();\n          // formData2.append('id_cart', NULL);\n          formData2.append('id_owner', idString);\n          formData2.append('id_plant', cart.id_plant);\n          formData2.append('name_product', cart.name_product);\n          formData2.append('image_represent', cart.image_represent);\n          formData2.append('price_product', cart.price_priduct);\n          formData2.append('quantity', count);\n          fetch(updateApiCart, {\n            method: 'POST',\n            body: formData2\n          }).then(response => response.json()).then(data => {}).catch(error => console.error('Error updating cart item:', error));\n        }\n      }\n    });\n  };\n\n  // tăng lên 1\n  const increaseQuantity = (id, id_plant, cart) => {\n    let count = 0;\n    // Gửi request GET đến API để lấy dữ liệu hiện tại\n    fetch(readApiCart).then(response => response.json()).then(data => {\n      // Kiểm tra xem sản phẩm đã tồn tại trong giỏ hàng chưa\n      const existingCartItem = data.find(item => item.id_owner === idString && item.id_plant === id_plant);\n      if (existingCartItem) {\n        count = parseInt(existingCartItem.quantity, 10);\n        count = count + 1;\n        const formData2 = new FormData();\n        // formData2.append('id_cart', NULL);\n        formData2.append('id_owner', idString);\n        formData2.append('id_plant', cart.id_plant);\n        formData2.append('name_product', cart.name_product);\n        formData2.append('image_represent', cart.image_represent);\n        formData2.append('price_product', cart.price_priduct);\n        formData2.append('quantity', count);\n        fetch(updateApiCart, {\n          method: 'POST',\n          body: formData2\n        }).then(response => response.json()).then(data => {}).catch(error => console.error('Error updating cart item:', error));\n      }\n    });\n  };\n\n  // xử lý thanh toán\n  const history = useNavigate();\n  const handlePay = (carts, total_money) => {\n    history('/pay');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        isLoggedIn: isLoggedIn,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Carts, \"moecKmJ7qWcOI14TWDpGwUmtL5Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Carts;\nexport default Carts;\nvar _c;\n$RefreshReg$(_c, \"Carts\");","map":{"version":3,"names":["Header","Footer","React","useState","useEffect","FontAwesomeIcon","fa1","fa2","fa3","faCartShopping","faCheck","faChevronRight","faCircle","faMoneyBill1Wave","faSpa","faStar","faTree","useLocation","useNavigate","readApiCart","updateApiCart","Fragment","_Fragment","jsxDEV","_jsxDEV","Carts","_ref","_s","isLoggedIn","username","id","carts","setCarts","totalMoney","setTotalMoney","quantities","setQuantities","fetch","then","response","json","data","newQuantities","forEach","cart","id_plant","quantity","updateTotalMoney","total","price_product","idString","toString","decreaseQuantity","count","existingCartItem","find","item","id_owner","parseInt","formData2","FormData","append","name_product","image_represent","price_priduct","method","body","catch","error","console","increaseQuantity","history","handlePay","total_money","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/ssms/website_plant/src/pages/carts/Carts.jsx"],"sourcesContent":["import Header from '~/components/header/Header';\r\nimport Footer from '~/components/footer/Footer';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './carts.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    fa1,\r\n    fa2,\r\n    fa3,\r\n    faCartShopping,\r\n    faCheck,\r\n    faChevronRight,\r\n    faCircle,\r\n    faMoneyBill1Wave,\r\n    faSpa,\r\n    faStar,\r\n    faTree,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { readApiCart, updateApiCart } from '~/Api';\r\n\r\nfunction Carts({ isLoggedIn, username, id }) {\r\n    // chứa các sản phẩm có id trùng với client\r\n    const [carts, setCarts] = useState([]);\r\n    const [totalMoney, setTotalMoney] = useState(0);\r\n    const [quantities, setQuantities] = useState([]);\r\n    // tạo kết nối\r\n    useEffect(() => {\r\n        fetch(`${readApiCart}?id_owner=${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setCarts(data);\r\n                const newQuantities = {};\r\n                data.forEach((cart) => {\r\n                    newQuantities[cart.id_plant] = cart.quantity; // Lưu quantity theo cart id\r\n                });\r\n\r\n                setQuantities(newQuantities); // Cập nhật state quantities\r\n            });\r\n    }, [quantities]);\r\n\r\n    // cập nhật tổng số tiền\r\n    useEffect(() => {\r\n        updateTotalMoney();\r\n    }, [quantities]);\r\n\r\n    const updateTotalMoney = () => {\r\n        let total = 0;\r\n        carts.forEach((cart) => {\r\n            const quantity = quantities[cart.id_plant] || cart.quantity;\r\n            total += cart.price_product * quantity;\r\n        });\r\n        setTotalMoney(total);\r\n    };\r\n\r\n    // giảm số lượng sản phẩm đi 1\r\n    const idString = id.toString();\r\n    const decreaseQuantity = (id, id_plant, cart) => {\r\n        let count = 0;\r\n        // Gửi request GET đến API để lấy dữ liệu hiện tại\r\n        fetch(readApiCart)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                // Kiểm tra xem sản phẩm đã tồn tại trong giỏ hàng chưa\r\n                const existingCartItem = data.find((item) => item.id_owner === idString && item.id_plant === id_plant);\r\n\r\n                if (existingCartItem) {\r\n                    count = parseInt(existingCartItem.quantity, 10);\r\n                    if (count === 0) {\r\n                    } else {\r\n                        count = count - 1;\r\n                        const formData2 = new FormData();\r\n                        // formData2.append('id_cart', NULL);\r\n                        formData2.append('id_owner', idString);\r\n                        formData2.append('id_plant', cart.id_plant);\r\n                        formData2.append('name_product', cart.name_product);\r\n                        formData2.append('image_represent', cart.image_represent);\r\n                        formData2.append('price_product', cart.price_priduct);\r\n                        formData2.append('quantity', count);\r\n                        fetch(updateApiCart, {\r\n                            method: 'POST',\r\n                            body: formData2,\r\n                        })\r\n                            .then((response) => response.json())\r\n                            .then((data) => {})\r\n                            .catch((error) => console.error('Error updating cart item:', error));\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n    // tăng lên 1\r\n    const increaseQuantity = (id, id_plant, cart) => {\r\n        let count = 0;\r\n        // Gửi request GET đến API để lấy dữ liệu hiện tại\r\n        fetch(readApiCart)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                // Kiểm tra xem sản phẩm đã tồn tại trong giỏ hàng chưa\r\n                const existingCartItem = data.find((item) => item.id_owner === idString && item.id_plant === id_plant);\r\n\r\n                if (existingCartItem) {\r\n                    count = parseInt(existingCartItem.quantity, 10);\r\n                    count = count + 1;\r\n                    const formData2 = new FormData();\r\n                    // formData2.append('id_cart', NULL);\r\n                    formData2.append('id_owner', idString);\r\n                    formData2.append('id_plant', cart.id_plant);\r\n                    formData2.append('name_product', cart.name_product);\r\n                    formData2.append('image_represent', cart.image_represent);\r\n                    formData2.append('price_product', cart.price_priduct);\r\n                    formData2.append('quantity', count);\r\n                    fetch(updateApiCart, {\r\n                        method: 'POST',\r\n                        body: formData2,\r\n                    })\r\n                        .then((response) => response.json())\r\n                        .then((data) => {})\r\n                        .catch((error) => console.error('Error updating cart item:', error));\r\n                }\r\n            });\r\n    };\r\n\r\n    // xử lý thanh toán\r\n    const history = useNavigate();\r\n    const handlePay = (carts, total_money) => {\r\n        history('/pay');\r\n    };\r\n    \r\n\r\n    return (\r\n        <>\r\n            {isLoggedIn ? (\r\n                <></>\r\n            ) : (\r\n                <>\r\n                    <Header isLoggedIn={isLoggedIn} username={username} />\r\n                </>\r\n            )}\r\n\r\n           \r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Carts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}