{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const history = useNavigate();\n  useEffect(() => {\n    // Kiểm tra nếu đã đăng nhập từ trước\n    const storedLoginStatus = localStorage.getItem('isLoggedIn');\n    if (storedLoginStatus === 'true') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const handleSubmit = e => {\n    // Kiểm tra thông tin đăng nhập\n    if (username === 'baohoa' && password === '123456') {\n      // Đăng nhập thành công\n\n      // Cập nhật trạng thái đăng nhập\n      setIsLoggedIn(true);\n\n      // Lưu trạng thái đăng nhập vào Local Storage\n      localStorage.setItem('isLoggedIn', 'true');\n\n      // Chuyển hướng người dùng về trang chủ\n      // window.location.href = `/trangchu/?user=${username}`;\n      history(`/?user=${username}&isLoggedIn=true`);\n    } else {\n      // Đăng nhập thất bại\n      alert('Thông tin đăng nhập không chính xác');\n    }\n  };\n  const handleLogin = () => {\n    // Thực hiện xác thực đăng nhập và cập nhật trạng thái isLoggedIn\n\n    setIsLoggedIn(true);\n\n    // Lưu trạng thái đăng nhập vào Local Storage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Chuyển hướng người dùng về trang chủ\n    // window.location.href = '/';\n    // const username = \"example_user\";\n    // window.location.href = `http://localhost:3000?username=${username}`;\n  };\n\n  const handleLogout = () => {\n    // Xử lý đăng xuất\n    setIsLoggedIn(false);\n\n    // Xóa trạng thái đăng nhập khỏi Local Storage\n    localStorage.removeItem('isLoggedIn');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Login, \"mweyO/ccJZMzIvTZvO4MjTLxWv4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","Link","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","isLoggedIn","setIsLoggedIn","history","storedLoginStatus","localStorage","getItem","handleSubmit","e","setItem","alert","handleLogin","handleLogout","removeItem","_c","$RefreshReg$"],"sources":["F:/hanhptn/reactjs/tiktok/src/pages/login/Login.js"],"sourcesContent":["import { useState, useEffect} from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const history = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Kiểm tra nếu đã đăng nhập từ trước\r\n        const storedLoginStatus = localStorage.getItem('isLoggedIn');\r\n        if (storedLoginStatus === 'true') {\r\n            setIsLoggedIn(true);\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        // Kiểm tra thông tin đăng nhập\r\n    if (username === 'baohoa' && password === '123456') {\r\n        // Đăng nhập thành công\r\n        \r\n        // Cập nhật trạng thái đăng nhập\r\n        setIsLoggedIn(true);\r\n\r\n        // Lưu trạng thái đăng nhập vào Local Storage\r\n        localStorage.setItem('isLoggedIn', 'true');\r\n\r\n        // Chuyển hướng người dùng về trang chủ\r\n        // window.location.href = `/trangchu/?user=${username}`;\r\n        history(`/?user=${username}&isLoggedIn=true`);\r\n    } else {\r\n        // Đăng nhập thất bại\r\n        alert('Thông tin đăng nhập không chính xác');\r\n    }\r\n        \r\n      };\r\n\r\n    const handleLogin = () => {\r\n        // Thực hiện xác thực đăng nhập và cập nhật trạng thái isLoggedIn\r\n\r\n        setIsLoggedIn(true);\r\n\r\n        // Lưu trạng thái đăng nhập vào Local Storage\r\n        localStorage.setItem('isLoggedIn', 'true');\r\n\r\n        // Chuyển hướng người dùng về trang chủ\r\n        // window.location.href = '/';\r\n        // const username = \"example_user\";\r\n        // window.location.href = `http://localhost:3000?username=${username}`;\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        // Xử lý đăng xuất\r\n        setIsLoggedIn(false);\r\n\r\n        // Xóa trạng thái đăng nhập khỏi Local Storage\r\n        localStorage.removeItem('isLoggedIn');\r\n    };\r\n\r\n    return (\r\n        <>\r\n        </>\r\n        \r\n      );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMgB,OAAO,GAAGb,WAAW,CAAC,CAAC;EAE7BF,SAAS,CAAC,MAAM;IACZ;IACA,MAAMgB,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAC5D,IAAIF,iBAAiB,KAAK,MAAM,EAAE;MAC9BF,aAAa,CAAC,IAAI,CAAC;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAIC,CAAC,IAAK;IACxB;IACJ,IAAIX,QAAQ,KAAK,QAAQ,IAAIE,QAAQ,KAAK,QAAQ,EAAE;MAChD;;MAEA;MACAG,aAAa,CAAC,IAAI,CAAC;;MAEnB;MACAG,YAAY,CAACI,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;;MAE1C;MACA;MACAN,OAAO,CAAE,UAASN,QAAS,kBAAiB,CAAC;IACjD,CAAC,MAAM;MACH;MACAa,KAAK,CAAC,qCAAqC,CAAC;IAChD;EAEE,CAAC;EAEH,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB;;IAEAT,aAAa,CAAC,IAAI,CAAC;;IAEnB;IACAG,YAAY,CAACI,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;;IAE1C;IACA;IACA;IACA;EACJ,CAAC;;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACvB;IACAV,aAAa,CAAC,KAAK,CAAC;;IAEpB;IACAG,YAAY,CAACQ,UAAU,CAAC,YAAY,CAAC;EACzC,CAAC;EAED,oBACInB,OAAA,CAAAF,SAAA,mBACE,CAAC;AAGX;AAACI,EAAA,CA9DQD,KAAK;EAAA,QAIML,WAAW;AAAA;AAAAwB,EAAA,GAJtBnB,KAAK;AAgEd,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}