{"ast":null,"code":"var _jsxFileName = \"F:\\\\hanhptn\\\\reactjs\\\\tiktok\\\\src\\\\pages\\\\carts\\\\Carts.js\",\n  _s = $RefreshSig$();\nimport Header from \"../header/Header\";\nimport Footer from \"../../components/footer/Footer\";\nimport React, { useState, useEffect } from 'react';\nimport \"./carts.scss\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fa1, fa2, fa3, faCartShopping, faCheck, faCircle, faMoneyBill1Wave, faSpa, faStar, faTree } from '@fortawesome/free-solid-svg-icons';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Carts(_ref) {\n  _s();\n  let {\n    isLoggedIn,\n    username\n  } = _ref;\n  // khai báo api lấy các sản phẩm trong giỏ hàng\n  const cartsAPI = 'http://localhost:3000/cart-bought';\n  const [carts, setCarts] = useState([]);\n  const [totalMoney, setTotalMoney] = useState(0);\n  // tạo kết nối\n  useEffect(() => {\n    fetch(cartsAPI).then(response => response.json()).then(data => {\n      setCarts(data);\n      const newQuantities = {};\n      data.forEach(cart => {\n        newQuantities[cart.id] = cart.quantity; // Lưu quantity theo cart id\n      });\n\n      setQuantities(newQuantities); // Cập nhật state quantities\n    });\n  }, [carts.length]);\n  const [quantities, setQuantities] = useState([]);\n  useEffect(() => {\n    updateTotalMoney();\n  }, [quantities]);\n  const updateTotalMoney = () => {\n    let total = 0;\n    carts.forEach(cart => {\n      const quantity = quantities[cart.id] || cart.quantity;\n      total += cart.price_bought * quantity;\n    });\n    setTotalMoney(total);\n  };\n\n  // const [quantities, setQuantities] = useState([1, 1]);\n  // const [totalMoney, setTotalMoney] = useState(0);\n  // const decreaseQuantity = (index) => {\n  //     const newQuantities = [...quantities];\n  //     if (newQuantities[index] > 1) {\n  //         newQuantities[index] -= 1;\n  //         setQuantities(newQuantities);\n  //     }\n  // };\n\n  // const increaseQuantity = (index) => {\n  //     const newQuantities = [...quantities];\n  //     newQuantities[index] += 1;\n  //     setQuantities(newQuantities);\n  // };\n\n  // const decreaseQuantity = (id) => {\n  //     if (quantities[id] > 1) {\n  //         setQuantities((prevQuantities) => ({\n  //             ...prevQuantities,\n  //             [id]: prevQuantities[id] - 1,\n  //         }));\n  //     }\n  // };\n\n  // const increaseQuantity = (id) => {\n  //     setQuantities((prevQuantities) => ({\n  //         ...prevQuantities,\n  //         [id]: prevQuantities[id] ? prevQuantities[id] + 1 : 1,\n  //     }));\n  // };\n\n  const decreaseQuantity = (id, cart) => {\n    if (quantities[id] > 0) {\n      setQuantities(prevQuantities => ({\n        ...prevQuantities,\n        [id]: prevQuantities[id] - 1\n      }));\n      fetch(`${cartsAPI}/${cart.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          image_represent: cart.image_represent,\n          name_product: cart.name_product,\n          price_bought: cart.price_bought,\n          id: cart.id,\n          quantity: quantities[id] - 1\n        })\n      }).then(response => {\n        if (response.ok) {\n          // Tăng sản phẩm lên 1\n          // setQuantities((prevQuantities) => ({\n          //     ...prevQuantities,\n          //     [id]: prevQuantities[id] + 1,\n          //   }));\n        } else {\n          throw new Error('Có lỗi xảy ra khi tăng số lượng sản phẩm.');\n        }\n      }).catch(error => console.error('Error deleting product:', error));\n    }\n  };\n  const increaseQuantity = (id, cart) => {\n    setQuantities(prevQuantities => ({\n      ...prevQuantities,\n      [id]: (prevQuantities[id] || 0) + 1\n    }));\n    fetch(`${cartsAPI}/${cart.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        image_represent: cart.image_represent,\n        name_product: cart.name_product,\n        price_bought: cart.price_bought,\n        id: cart.id,\n        quantity: quantities[id] + 1\n      })\n    }).then(response => {\n      if (response.ok) {\n        // Tăng sản phẩm lên 1\n        // setQuantities((prevQuantities) => ({\n        //     ...prevQuantities,\n        //     [id]: prevQuantities[id] + 1,\n        //   }));\n      } else {\n        throw new Error('Có lỗi xảy ra khi tăng số lượng sản phẩm.');\n      }\n    }).catch(error => console.error('Error deleting product:', error));\n  };\n\n  // const updateTotalMoney = () => {\n  //     let total = 0;\n  //     carts.forEach((cart, index) => {\n  //       const quantity = quantities[index] || 1;\n  //       total += cart.price_bought * quantity;\n  //     });\n  //     setTotalMoney(total);\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        isLoggedIn: isLoggedIn,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n}\n_s(Carts, \"ObtL+tfZhQwwuPCpSScbazSJgHQ=\");\n_c = Carts;\nexport default Carts;\nvar _c;\n$RefreshReg$(_c, \"Carts\");","map":{"version":3,"names":["Header","Footer","React","useState","useEffect","FontAwesomeIcon","fa1","fa2","fa3","faCartShopping","faCheck","faCircle","faMoneyBill1Wave","faSpa","faStar","faTree","Fragment","_Fragment","jsxDEV","_jsxDEV","Carts","_ref","_s","isLoggedIn","username","cartsAPI","carts","setCarts","totalMoney","setTotalMoney","fetch","then","response","json","data","newQuantities","forEach","cart","id","quantity","setQuantities","length","quantities","updateTotalMoney","total","price_bought","decreaseQuantity","prevQuantities","method","headers","body","JSON","stringify","image_represent","name_product","ok","Error","catch","error","console","increaseQuantity","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/hanhptn/reactjs/tiktok/src/pages/carts/Carts.js"],"sourcesContent":["import Header from '~/pages/header/Header';\r\nimport Footer from '~/components/footer/Footer';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './carts.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    fa1,\r\n    fa2,\r\n    fa3,\r\n    faCartShopping,\r\n    faCheck,\r\n    faCircle,\r\n    faMoneyBill1Wave,\r\n    faSpa,\r\n    faStar,\r\n    faTree,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Carts({ isLoggedIn, username }) {\r\n    // khai báo api lấy các sản phẩm trong giỏ hàng\r\n    const cartsAPI = 'http://localhost:3000/cart-bought';\r\n    const [carts, setCarts] = useState([]);\r\n    const [totalMoney, setTotalMoney] = useState(0);\r\n    // tạo kết nối\r\n    useEffect(() => {\r\n        fetch(cartsAPI)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setCarts(data);\r\n                const newQuantities = {};\r\n                data.forEach((cart) => {\r\n                    newQuantities[cart.id] = cart.quantity; // Lưu quantity theo cart id\r\n                });\r\n\r\n                setQuantities(newQuantities); // Cập nhật state quantities\r\n            });\r\n    }, [carts.length]);\r\n    const [quantities, setQuantities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        updateTotalMoney();\r\n    }, [quantities]);\r\n\r\n    const updateTotalMoney = () => {\r\n        let total = 0;\r\n        carts.forEach((cart) => {\r\n            const quantity = quantities[cart.id] || cart.quantity;\r\n            total += cart.price_bought * quantity;\r\n        });\r\n        setTotalMoney(total);\r\n    };\r\n\r\n    // const [quantities, setQuantities] = useState([1, 1]);\r\n    // const [totalMoney, setTotalMoney] = useState(0);\r\n    // const decreaseQuantity = (index) => {\r\n    //     const newQuantities = [...quantities];\r\n    //     if (newQuantities[index] > 1) {\r\n    //         newQuantities[index] -= 1;\r\n    //         setQuantities(newQuantities);\r\n    //     }\r\n    // };\r\n\r\n    // const increaseQuantity = (index) => {\r\n    //     const newQuantities = [...quantities];\r\n    //     newQuantities[index] += 1;\r\n    //     setQuantities(newQuantities);\r\n    // };\r\n\r\n    // const decreaseQuantity = (id) => {\r\n    //     if (quantities[id] > 1) {\r\n    //         setQuantities((prevQuantities) => ({\r\n    //             ...prevQuantities,\r\n    //             [id]: prevQuantities[id] - 1,\r\n    //         }));\r\n    //     }\r\n    // };\r\n\r\n    // const increaseQuantity = (id) => {\r\n    //     setQuantities((prevQuantities) => ({\r\n    //         ...prevQuantities,\r\n    //         [id]: prevQuantities[id] ? prevQuantities[id] + 1 : 1,\r\n    //     }));\r\n    // };\r\n\r\n    const decreaseQuantity = (id, cart) => {\r\n        if (quantities[id] > 0) {\r\n            setQuantities((prevQuantities) => ({\r\n                ...prevQuantities,\r\n                [id]: prevQuantities[id] - 1,\r\n            }));\r\n\r\n            fetch(`${cartsAPI}/${cart.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    image_represent: cart.image_represent,\r\n                    name_product: cart.name_product,\r\n                    price_bought: cart.price_bought,\r\n                    id: cart.id,\r\n                    quantity: quantities[id] - 1,\r\n                }),\r\n            })\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n                        // Tăng sản phẩm lên 1\r\n                        // setQuantities((prevQuantities) => ({\r\n                        //     ...prevQuantities,\r\n                        //     [id]: prevQuantities[id] + 1,\r\n                        //   }));\r\n                    } else {\r\n                        throw new Error('Có lỗi xảy ra khi tăng số lượng sản phẩm.');\r\n                    }\r\n                })\r\n                .catch((error) => console.error('Error deleting product:', error));\r\n        }\r\n    };\r\n\r\n    const increaseQuantity = (id, cart) => {\r\n        setQuantities((prevQuantities) => ({\r\n            ...prevQuantities,\r\n            [id]: (prevQuantities[id] || 0) + 1,\r\n        }));\r\n\r\n        fetch(`${cartsAPI}/${cart.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                image_represent: cart.image_represent,\r\n                name_product: cart.name_product,\r\n                price_bought: cart.price_bought,\r\n                id: cart.id,\r\n                quantity: quantities[id] + 1,\r\n            }),\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    // Tăng sản phẩm lên 1\r\n                    // setQuantities((prevQuantities) => ({\r\n                    //     ...prevQuantities,\r\n                    //     [id]: prevQuantities[id] + 1,\r\n                    //   }));\r\n                } else {\r\n                    throw new Error('Có lỗi xảy ra khi tăng số lượng sản phẩm.');\r\n                }\r\n            })\r\n            .catch((error) => console.error('Error deleting product:', error));\r\n    };\r\n\r\n    // const updateTotalMoney = () => {\r\n    //     let total = 0;\r\n    //     carts.forEach((cart, index) => {\r\n    //       const quantity = quantities[index] || 1;\r\n    //       total += cart.price_bought * quantity;\r\n    //     });\r\n    //     setTotalMoney(total);\r\n    //   };\r\n\r\n    return (\r\n        <>\r\n            {isLoggedIn ? (\r\n                <></>\r\n            ) : (\r\n                <>\r\n                    <Header isLoggedIn={isLoggedIn} username={username} />\r\n                </>\r\n            )}\r\n\r\n            \r\n\r\n            \r\n        </>\r\n        \r\n    );\r\n    \r\n}\r\n\r\nexport default Carts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}