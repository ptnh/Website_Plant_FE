[{"F:\\hanhptn\\reactjs\\tiktok\\src\\index.js":"1","F:\\hanhptn\\reactjs\\tiktok\\src\\App.js":"2","F:\\hanhptn\\reactjs\\tiktok\\src\\reportWebVitals.js":"3","F:\\hanhptn\\reactjs\\tiktok\\src\\components\\Body.js":"4","F:\\hanhptn\\reactjs\\tiktok\\src\\data-plants.js":"5","F:\\hanhptn\\reactjs\\tiktok\\src\\components\\footer\\Footer.js":"6","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\login\\Login.js":"7","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\header\\Header.js":"8","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\register\\Register.js":"9","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\carts\\Carts.js":"10","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\pay\\Pay.js":"11","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\introduce\\Introduce.js":"12","F:\\hanhptn\\reactjs\\tiktok\\src\\components\\map\\Map.js":"13","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\Product.js":"14","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\contact\\Contact.js":"15","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\policy\\Policy.js":"16","E:\\TTTN\\website_plant\\src\\index.js":"17","E:\\TTTN\\website_plant\\src\\reportWebVitals.js":"18","E:\\TTTN\\website_plant\\src\\App.js":"19","E:\\TTTN\\website_plant\\src\\Api.js":"20","E:\\TTTN\\website_plant\\src\\components\\header\\Header.js":"21","E:\\TTTN\\website_plant\\src\\components\\footer\\Footer.js":"22","E:\\TTTN\\website_plant\\src\\components\\body\\Body.js":"23","E:\\TTTN\\website_plant\\src\\pages\\carts\\Carts.js":"24","E:\\TTTN\\website_plant\\src\\pages\\product\\Product.js":"25","E:\\TTTN\\website_plant\\src\\pages\\pay\\Pay.js":"26","E:\\TTTN\\website_plant\\src\\pages\\login\\Login.js":"27","E:\\TTTN\\website_plant\\src\\pages\\register\\Register.js":"28","E:\\TTTN\\website_plant\\src\\pages\\introduce\\Introduce.js":"29","E:\\TTTN\\website_plant\\src\\pages\\info\\Info.js":"30","E:\\TTTN\\website_plant\\src\\pages\\contact\\Contact.js":"31","E:\\TTTN\\website_plant\\src\\pages\\policy\\Policy.js":"32","E:\\TTTN\\website_plant\\src\\data-plants.js":"33","E:\\TTTN\\website_plant\\src\\components\\map\\Map.js":"34"},{"size":629,"mtime":1687083592690,"results":"35","hashOfConfig":"36"},{"size":5735,"mtime":1690456693567,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1684766444806,"results":"38","hashOfConfig":"36"},{"size":13868,"mtime":1690651937486,"results":"39","hashOfConfig":"36"},{"size":379,"mtime":1690460528774,"results":"40","hashOfConfig":"36"},{"size":960,"mtime":1687083910490,"results":"41","hashOfConfig":"36"},{"size":2488,"mtime":1690174306587,"results":"42","hashOfConfig":"36"},{"size":13077,"mtime":1690628806685,"results":"43","hashOfConfig":"36"},{"size":5334,"mtime":1690174262039,"results":"44","hashOfConfig":"36"},{"size":12555,"mtime":1690691974036,"results":"45","hashOfConfig":"36"},{"size":11685,"mtime":1690175313334,"results":"46","hashOfConfig":"36"},{"size":4784,"mtime":1690624199735,"results":"47","hashOfConfig":"36"},{"size":1941,"mtime":1690624594991,"results":"48","hashOfConfig":"36"},{"size":17690,"mtime":1690685028290,"results":"49","hashOfConfig":"36"},{"size":391,"mtime":1690624312366,"results":"50","hashOfConfig":"36"},{"size":9290,"mtime":1690625051065,"results":"51","hashOfConfig":"36"},{"size":629,"mtime":1687083592690,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":1684766444806,"results":"54","hashOfConfig":"53"},{"size":8301,"mtime":1694133581192,"results":"55","hashOfConfig":"53"},{"size":1558,"mtime":1733819159318,"results":"56","hashOfConfig":"53"},{"size":14375,"mtime":1694135664566,"results":"57","hashOfConfig":"53"},{"size":6270,"mtime":1691041819183,"results":"58","hashOfConfig":"53"},{"size":21277,"mtime":1733819183487,"results":"59","hashOfConfig":"53"},{"size":10434,"mtime":1711706643178,"results":"60","hashOfConfig":"53"},{"size":21786,"mtime":1694137206017,"results":"61","hashOfConfig":"53"},{"size":11433,"mtime":1694013102313,"results":"62","hashOfConfig":"53"},{"size":2678,"mtime":1692176142186,"results":"63","hashOfConfig":"53"},{"size":5569,"mtime":1692176740601,"results":"64","hashOfConfig":"53"},{"size":4784,"mtime":1690624199735,"results":"65","hashOfConfig":"53"},{"size":15924,"mtime":1694156416208,"results":"66","hashOfConfig":"53"},{"size":391,"mtime":1690624312366,"results":"67","hashOfConfig":"53"},{"size":9290,"mtime":1690625051065,"results":"68","hashOfConfig":"53"},{"size":379,"mtime":1691589737836,"results":"69","hashOfConfig":"53"},{"size":1941,"mtime":1710314328323,"results":"70","hashOfConfig":"53"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"u63wq8",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"92808x",{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"128"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"128"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"128"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"128"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"128"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"128"},"F:\\hanhptn\\reactjs\\tiktok\\src\\index.js",[],[],[],"F:\\hanhptn\\reactjs\\tiktok\\src\\App.js",[],[],"F:\\hanhptn\\reactjs\\tiktok\\src\\reportWebVitals.js",[],[],"F:\\hanhptn\\reactjs\\tiktok\\src\\components\\Body.js",["192","193","194","195","196","197","198"],[],"import './body.scss';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    faChildReaching,\r\n    faCircleXmark,\r\n    faHeart,\r\n    faLeaf,\r\n    faMagnifyingGlass,\r\n    faMoneyBillTrendUp,\r\n    faSpinner,\r\n    faArrowRight,\r\n    faArrowLeft,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Body = ({ username, id }) => {\r\n    const plantsAPI = 'http://localhost:3000/plants_home';\r\n\r\n    // chứa thông tin danh sách hàng\r\n    const [plants, setPlants] = useState([]);\r\n    //lấy data truyền vào plants\r\n    useEffect(() => {\r\n        fetch(plantsAPI)\r\n            .then((response) => response.json())\r\n            .then((data) => setPlants(data));\r\n    }, []);\r\n\r\n    const limitedPlants = plants.slice(0, 4); // Giới hạn chỉ lấy 4 phần tử đầu tiên\r\n\r\n    const comment = document.querySelector('.detail-plant');\r\n\r\n    const [translateX, setTranslateX] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n\r\n    // xử lý di chuyển chọn lựa sản phẩm sang phải\r\n    const handleNext = () => {\r\n        if (count === plants.length - 4) {\r\n            setCount(count);\r\n        } else {\r\n            setTranslateX(translateX - 300);\r\n            setCount(count + 1);\r\n        }\r\n    };\r\n\r\n    // xử lý di chuyển chọn lựa sản phẩm sang trái\r\n    const handlePrev = () => {\r\n        if (count === 0) {\r\n            setTranslateX(translateX + 0);\r\n        } else {\r\n            setTranslateX(translateX + 300);\r\n            setCount(count - 1);\r\n        }\r\n    };\r\n\r\n    //thêm sản phẩm vào giỏ hàng\r\n    const handleClickAddToCart = (plant) => {\r\n        handleAddToCart(plant);\r\n    };\r\n    const idString = id.toString();\r\n    //thêm sản phẩm vào giỏ hàng\r\n    const handleAddToCart = (plantId) => {\r\n        const CartssAPI = 'http://localhost:3000/cart_bought';\r\n        const newCart = {\r\n            owner: idString,\r\n            id_plant: plantId.id,\r\n            image_represent: plantId.pic,\r\n            name_product: plantId.name,\r\n            price_bought: plantId.price_new,\r\n            quantity: 1,\r\n        };\r\n\r\n        // Gửi request GET đến API để lấy dữ liệu hiện tại\r\n        fetch(CartssAPI)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                // Kiểm tra xem sản phẩm đã tồn tại trong giỏ hàng chưa\r\n                const existingCartItem = data.find((item) => item.owner === idString && item.id_plant === plantId.id);\r\n\r\n                if (existingCartItem) {\r\n                    // Nếu sản phẩm đã tồn tại, tăng số lượng lên +1\r\n                    const updatedCart = {\r\n                        ...existingCartItem,\r\n                        quantity: existingCartItem.quantity + 1,\r\n                    };\r\n\r\n                    // Gửi request PUT đến API để cập nhật thông tin sản phẩm trong giỏ hàng\r\n                    fetch(`${CartssAPI}/${existingCartItem.id}`, {\r\n                        method: 'PUT',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify(updatedCart),\r\n                    })\r\n                        .then((response) => response.json())\r\n                        .then((data) => {})\r\n                        .catch((error) => console.error('Error updating cart item:', error));\r\n                } else {\r\n                    // Nếu sản phẩm chưa tồn tại, thêm sản phẩm mới vào giỏ hàng\r\n                    fetch(CartssAPI, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify(newCart),\r\n                    })\r\n                        .then((response) => response.json())\r\n                        .then((data) => {})\r\n                        .catch((error) => console.error('Error fetching carts:', error));\r\n                }\r\n            })\r\n            .catch((error) => console.error('Error fetching carts:', error));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"body_first\">\r\n                <img src=\"background.jpg\" alt=\"\" />\r\n                <div className=\"benefit\">\r\n                    <h2>Lợi ích mua cây</h2>\r\n                    <div className=\"list-benefit\">\r\n                        <div className=\"item-benefit\">\r\n                            <FontAwesomeIcon className=\"icons\" icon={faHeart} />\r\n                            <div className=\"content\">\r\n                                <h3>Tạo cảm giác thoải mái</h3>\r\n                                <p>\r\n                                    Chăm sóc cây trồng giúp bạn thư giãn. Từ đó, sẽ giảm thiểu được những sự mệt mỏi về\r\n                                    tinh thần, hưng phấn hơn,vui vẻ hơn.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-benefit\">\r\n                            <FontAwesomeIcon className=\"icons\" icon={faChildReaching} />\r\n                            <div className=\"content\">\r\n                                <h3>Sức khỏe</h3>\r\n                                <p>\r\n                                    Có thêm cây xanh trong nhà, góp phần không nhỏ trong việc bảo vệ sức khỏe mọi người\r\n                                    trong nhà.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"item-benefit\">\r\n                            <FontAwesomeIcon className=\"icons\" icon={faMoneyBillTrendUp} />\r\n                            <div className=\"content\">\r\n                                <h3>Thu hút tài lộc</h3>\r\n                                <p>\r\n                                    Ngoài việc làm đẹp cho ngôi nhà của bạn, cây cảnh còn có ý nghĩa rất lớn về mặt\r\n                                    phong thủy.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* dự kiến sẽ bỏ vì không tính được cách số lượng sản phẩm đã bán tất cả  */}\r\n            {/* <div className=\"best-seller\">\r\n                <div className=\"title\">\r\n                    <FontAwesomeIcon className=\"icon-best-seller\" icon={faLeaf} />\r\n                    <h4>SẢN PHẨM BÁN CHẠY</h4>\r\n                    <FontAwesomeIcon className=\"icon-best-seller\" icon={faLeaf} />\r\n                </div>\r\n                <div className=\"product\">\r\n                    <div className=\"contetn-product\">\r\n                        <img src=\"sen-da-mini.jpg\" alt=\"\" />\r\n                        <div className=\"content\">\r\n                            <h3>Tên sản phẩm</h3>\r\n                            <h3>Giá sản phẩm</h3>\r\n                            <div className=\"add-product-bestseler\">\r\n                                <button className=\"btn-add-product-bestseler\" href=\"\">Cho vào giỏ hàng</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"contetn-product\">\r\n                        <img src=\"sen-da-mini.jpg\" alt=\"\" />\r\n                        <div className=\"content\">\r\n                            <h3>Tên sản phẩm</h3>\r\n                            <h3>Giá sản phẩm</h3>\r\n                            <div className=\"add-product-bestseler\">\r\n                                <button className=\"btn-add-product-bestseler\" href=\"\">Cho vào giỏ hàng</button>\r\n                            </div>\r\n                        </div>\r\n                    </div><div className=\"contetn-product\">\r\n                        <img src=\"sen-da-mini.jpg\" alt=\"\" />\r\n                        <div className=\"content\">\r\n                            <h3>Tên sản phẩm</h3>\r\n                            <h3>Giá sản phẩm</h3>\r\n                            <div className=\"add-product-bestseler\">\r\n                                <button className=\"btn-add-product-bestseler\" href=\"\">Cho vào giỏ hàng</button>\r\n                            </div>\r\n                        </div>\r\n                    </div><div className=\"contetn-product\">\r\n                        <img src=\"sen-da-mini.jpg\" alt=\"\" />\r\n                        <div className=\"content\">\r\n                            <h3>Tên sản phẩm</h3>\r\n                            <h3>Giá sản phẩm</h3>\r\n                            <div className=\"add-product-bestseler\">\r\n                                <button className=\"btn-add-product-bestseler\" href=\"\">Cho vào giỏ hàng</button>\r\n                            </div>\r\n                        </div>\r\n                    </div><div className=\"contetn-product\">\r\n                        <img src=\"sen-da-mini.jpg\" alt=\"\" />\r\n                        <div className=\"content\">\r\n                            <h3>Tên sản phẩm</h3>\r\n                            <h3>Giá sản phẩm</h3>\r\n                            <div className=\"add-product-bestseler\">\r\n                                <button className=\"btn-add-product-bestseler\" href=\"\">Cho vào giỏ hàng</button>\r\n                            </div>\r\n                        </div>\r\n                    </div><div className=\"contetn-product\">\r\n                        <img src=\"sen-da-mini.jpg\" alt=\"\" />\r\n                        <div className=\"content\">\r\n                            <h3>Tên sản phẩm</h3>\r\n                            <h3>Giá sản phẩm</h3>\r\n                            <div className=\"add-product-bestseler\">\r\n                                <button className=\"btn-add-product-bestseler\" href=\"\">Cho vào giỏ hàng</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            <div className=\"category-plants\">\r\n                <div className=\"stemp\">\r\n                    <span>Yêu thích</span>\r\n                </div>\r\n                <div className=\"list-plants\">\r\n                    <button className=\"arrow-button left-button\" onClick={handlePrev}>\r\n                        <FontAwesomeIcon className=\"icons-left\" icon={faArrowLeft} />\r\n                    </button>\r\n                    <div className=\"detail-plant-container\" style={{ transform: `translateX(${translateX}px)` }}>\r\n                        {plants.map((plant) => (\r\n                            <div key={plant.id} className=\"detail-plant\">\r\n                                <img class=\"custom-image\" src={plant.picture_main} alt=\"\" />\r\n                                <h3>\r\n                                    <a href={`/product?id=${plant.id}`}>{plant.name}</a>\r\n                                </h3>\r\n                                <div className=\"price\">\r\n                                    <div className=\"price-old\">{plant.price_old}</div>\r\n                                    <div className=\"price-new\">{plant.price_new}</div>\r\n                                </div>\r\n                                <button class=\"add-product\" onClick={() => handleClickAddToCart(plant)}>\r\n                                    CHO VÀO GIỎ HÀNG\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <button className=\"arrow-button right-button\" onClick={handleNext}>\r\n                        <FontAwesomeIcon className=\"icons-right\" icon={faArrowRight} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"category-plants\">\r\n                <div className=\"stemp\">\r\n                    <span>Yêu thích</span>\r\n                </div>\r\n                <div className=\"list-plants\">\r\n                    <button className=\"arrow-button left-button\" onClick={handlePrev}>\r\n                        <FontAwesomeIcon className=\"icons-left\" icon={faArrowLeft} />\r\n                    </button>\r\n                    <div className=\"detail-plant-container\" style={{ transform: `translateX(${translateX}px)` }}>\r\n                        {plants.map((plant) => (\r\n                            <div key={plant.id} className=\"detail-plant\">\r\n                                <img class=\"custom-image\" src={plant.picture_main} alt=\"\" />\r\n                                <h3>\r\n                                    <a href={`/product?id=${plant.id}`}>{plant.name}</a>\r\n                                </h3>\r\n                                <div className=\"price\">\r\n                                    <div className=\"price-old\">{plant.price_old}</div>\r\n                                    <div className=\"price-new\">{plant.price_new}</div>\r\n                                </div>\r\n                                <button class=\"add-product\" onClick={() => handleClickAddToCart(plant)}>\r\n                                    CHO VÀO GIỎ HÀNG\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <button className=\"arrow-button right-button\" onClick={handleNext}>\r\n                        <FontAwesomeIcon className=\"icons-right\" icon={faArrowRight} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Body;\r\n",[],"F:\\hanhptn\\reactjs\\tiktok\\src\\data-plants.js",[],[],"F:\\hanhptn\\reactjs\\tiktok\\src\\components\\footer\\Footer.js",[],[],"F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\login\\Login.js",["199","200","201","202"],[],"import { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './login.scss';\r\nfunction Login({ onLogin }) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [idFlag, setIdFlag] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const accountAPI = 'http://localhost:3000/accounts';\r\n        fetch(accountAPI)\r\n        .then(response => response.json())\r\n        .then(accounts => {\r\n            const account = accounts.find(acc => acc.username_account === username);\r\n            if (account && account.password_account === password) {\r\n                setIdFlag(account.id);\r\n                onLogin(username, account.id);\r\n                navigate('/');\r\n              } else {\r\n                alert('Thông tin đăng nhập không chính xác');\r\n              }\r\n        })\r\n        .catch(error => console.error('Error fetching accounts:', error));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div class=\"box_login\">\r\n                <div className=\"form_login\">\r\n                    <img src=\"logo.jpg\"></img>\r\n                    <h2>Đăng nhập</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div class=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div class=\"inputBox\">\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btn-logins\" type=\"submit\">\r\n                            Đăng nhập\r\n                        </button>\r\n                    </form>\r\n                    <button className=\"btn-dangky\">\r\n                        <a href=\"http://localhost:2112/register\">Đăng ký</a>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\header\\Header.js",["203","204","205","206","207","208","209","210","211","212"],[],"F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\register\\Register.js",["213","214","215","216"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './register.scss';\r\n\r\nfunction Register() {\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name_client, setNameClient] = useState('');\r\n    const [address, setAddressClient] = useState('');\r\n    const [email, setEmailClient] = useState('');\r\n    const [phone, setPhoneClient] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const [carts, setCarts] = useState([]);\r\n\r\n    //tạo account\r\n    const handleCreateAccount = () => {\r\n        const accountAPI = 'http://localhost:3000/accounts';\r\n        const newAccount = {\r\n            name_clients: name_client,\r\n            email_client: email,\r\n            phone_client: phone,\r\n            address_client: address,\r\n            username_account: username,\r\n            password_account: password,\r\n        };\r\n\r\n        fetch(accountAPI, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newAccount),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setAccounts([...accounts, data]);\r\n                setUsername('');\r\n                setPassword('');\r\n                navigate('/login');\r\n            })\r\n            .catch((error) => console.error('Error creating post:', error));\r\n    };\r\n\r\n    return (\r\n        <div className=\"box_register\">\r\n            <div className=\"form_register\">\r\n                <img src=\"logo.jpg\" alt=\"Logo\"></img>\r\n                <h2>Đăng ký tài khoản</h2>\r\n                <form className=\"form_mini\">\r\n                    <div className=\"info_user\">\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Nhập họ và tên:\"\r\n                                value={name_client}\r\n                                onChange={(e) => setNameClient(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"address\"\r\n                                name=\"address\"\r\n                                placeholder=\"Nhập địa chỉ:\"\r\n                                value={address}\r\n                                onChange={(e) => setAddressClient(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Nhập SĐT:\"\r\n                                value={phone}\r\n                                onChange={(e) => setPhoneClient(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Nhập email:\"\r\n                                value={email}\r\n                                onChange={(e) => setEmailClient(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"info_account\">\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                name=\"username\"\r\n                                placeholder=\"Nhập tên tài khoản\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Nhập mật khẩu tài khoản\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <button className=\"btn_dangky_register\" type=\"submit\" onClick={handleCreateAccount}>\r\n                    Tạo tài khoản\r\n                </button>\r\n                <button className=\"btn_logins_register\">\r\n                    <a href=\"http://localhost:2112/login\">Đăng nhập</a>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\carts\\Carts.js",["217","218","219","220","221","222","223"],[],"F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\pay\\Pay.js",["224","225","226","227","228"],[],"import Header from '~/pages/header/Header';\r\nimport Footer from '~/components/footer/Footer';\r\nimport './pay.scss';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    fa1,\r\n    fa2,\r\n    fa3,\r\n    faCartShopping,\r\n    faCheck,\r\n    faCircle,\r\n    faMoneyBill1Wave,\r\n    faSpa,\r\n    faStar,\r\n    faTree,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Pay({ isLoggedIn, username, id }) {\r\n\r\n    //tạo kết nối lấy thông tin khách hàng\r\n    const navigate = useNavigate();\r\n    const clientAPI = `http://localhost:3000/accounts`;\r\n    const [clients, setClients] = useState([]);\r\n    useEffect(() => {\r\n        fetch(clientAPI)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setClients(data);\r\n                // console.log(clients);\r\n            });\r\n    }, [id]);\r\n\r\n    const orderAPI = `http://localhost:3000/order?owner=${id}`;\r\n    const [orders, setOrders] = useState([]);\r\n    // tạo kết nối\r\n    useEffect(() => {\r\n        fetch(orderAPI)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setOrders(data);\r\n            });\r\n    }, [orders.length]);\r\n\r\n    const filteredOrders = orders.filter((order) => order.owner === id);\r\n    console.log(filteredOrders);\r\n    // Tìm giá trị lớn nhất của order.id trong danh sách filteredOrders\r\n    const maxOrderId = filteredOrders.reduce((maxId, order) => Math.max(maxId, order.id), 0);\r\n\r\n    // console.log(filteredOrders);\r\n    const handleSubmitBill = (list_carts) => {\r\n        const billAPI = 'http://localhost:3000/bills';\r\n        const newBill = {\r\n            owner: id,\r\n            name_Client: nameClient,\r\n            phone_Client: phoneClient,\r\n            email_Client: emailClient,\r\n            address_Client: addressClient,\r\n\r\n            cartsss: list_carts\r\n                .filter((list_cart) => list_cart.id === maxOrderId)\r\n                .map((list_cart) => ({\r\n                    carts: list_cart.carts.map((cart) => ({\r\n                        image_represent: cart.image_represent,\r\n                        name_product: cart.name_product,\r\n                        price_bought: cart.price_bought,\r\n                        quantity: cart.quantity,\r\n                        // Thêm các thuộc tính khác của cart nếu cần\r\n                    })),\r\n                })),\r\n        };\r\n\r\n        //tạo kết nối giỏ hàng để xóa sản phẩm\r\n        const cartsqAPI = `http://localhost:3000/cart_bought`;\r\n        // Lấy danh sách các sản phẩm có owner=id từ API\r\n        fetch(`${cartsqAPI}?owner=${id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            // Duyệt qua từng sản phẩm và thực hiện yêu cầu DELETE riêng lẻ cho từng sản phẩm\r\n            const deletePromises = data.map((item) => {\r\n                return fetch(`${cartsqAPI}/${item.id}`, {\r\n                    method: 'DELETE',\r\n                });\r\n            });\r\n\r\n            // Sử dụng Promise.all để đợi tất cả các yêu cầu DELETE hoàn thành\r\n            return Promise.all(deletePromises);\r\n        })\r\n        .then((responses) => {\r\n            // Kiểm tra tất cả các phản hồi từ các yêu cầu DELETE\r\n            const allSuccessful = responses.every((response) => response.ok);\r\n            if (allSuccessful) {\r\n                alert('Xóa sản phẩm thành công.');\r\n            } else {\r\n                throw new Error('Có lỗi xảy ra khi xóa sản phẩm.');\r\n            }\r\n        })\r\n        .catch((error) => console.error('Error deleting product:', error));\r\n        \r\n\r\n        fetch(billAPI, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newBill),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {})\r\n            .catch((error) => console.error('Error creating post:', error));\r\n\r\n        navigate('/');\r\n    };\r\n\r\n    const [nameClient, setNameClient] = useState('');\r\n    const [phoneClient, setPhoneClient] = useState('');\r\n    const [emailClient, setEmailClient] = useState('');\r\n    const [addressClient, setAddressClient] = useState('');\r\n\r\n    return (\r\n        <>\r\n            {isLoggedIn ? (\r\n                <></>\r\n            ) : (\r\n                <>\r\n                    <Header isLoggedIn={isLoggedIn} username={username} />\r\n                </>\r\n            )}\r\n\r\n            <div className=\"section-first-title\">\r\n                <FontAwesomeIcon icon={faTree} />\r\n                <h3>Thông tin thanh toán</h3>\r\n                <FontAwesomeIcon icon={faTree} />\r\n                <div className=\"icon-mid\">\r\n                    <FontAwesomeIcon icon={faSpa} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"section_pay_money\">\r\n                <div class=\"top_infomation\">\r\n                    <div class=\"stages_of_cart\">\r\n                        <div class=\"stage_1\">\r\n                            <FontAwesomeIcon className=\"phase\" icon={faCartShopping} />\r\n                            <p>Giỏ hàng của tôi</p>\r\n                            <FontAwesomeIcon className=\"fa-light\" icon={fa1} />\r\n                        </div>\r\n                        <div class=\"stage_2\">\r\n                            <FontAwesomeIcon className=\"phase\" icon={faMoneyBill1Wave} />\r\n                            <p>Giỏ hàng của tôi</p>\r\n                            <FontAwesomeIcon icon={fa2} />\r\n                        </div>\r\n                        <div class=\"stage_3\">\r\n                            <FontAwesomeIcon className=\"phase\" icon={faCheck} />\r\n                            <p>Giỏ hàng của tôi</p>\r\n                            <FontAwesomeIcon icon={fa3} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"infomation_client_pay\">\r\n                    <form>\r\n                        <h3>Thông tin khách hàng</h3>\r\n                        {clients.map((client) =>\r\n                            client.name_clients === username ? (\r\n                                <div>\r\n                                    <div class=\"form-group\">\r\n                                        <input\r\n                                            placeholder=\"Tên khách hàng\"\r\n                                            type=\"text\"\r\n                                            id=\"name\"\r\n                                            name=\"name\"\r\n                                            value={client.name_clients}\r\n                                            autoFocus\r\n                                            onFocus={(e) => setNameClient(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <input\r\n                                            placeholder=\"SĐT\"\r\n                                            type=\"text\"\r\n                                            id=\"name\"\r\n                                            name=\"name\"\r\n                                            value={client.phone_client}\r\n                                            autoFocus\r\n                                            onFocus={(e) => setPhoneClient(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <input\r\n                                            placeholder=\"Email\"\r\n                                            type=\"text\"\r\n                                            id=\"name\"\r\n                                            name=\"name\"\r\n                                            value={client.email_client}\r\n                                            autoFocus\r\n                                            onFocus={(e) => setEmailClient(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <input\r\n                                            placeholder=\"Địa chỉ\"\r\n                                            type=\"text\"\r\n                                            id=\"address\"\r\n                                            name=\"address\"\r\n                                            autoFocus\r\n                                            value={client.address_client}\r\n                                            onFocus={(e) => setAddressClient(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            ) : null,\r\n                        )}\r\n\r\n                        <h3>Thông tin đơn hàng</h3>\r\n                        <table class=\"list_products\">\r\n                            {filteredOrders.map((order) =>\r\n                                order.id === maxOrderId ? (\r\n                                    <div key={order.id}>\r\n                                        <h3>Đơn hàng #{order.id}</h3>\r\n                                        <table>\r\n                                            <tr>\r\n                                                <th>Ảnh</th>\r\n                                                <th>Tên sản phẩm</th>\r\n                                                <th>Giá cả</th>\r\n                                                <th>Số lượng</th>\r\n                                                <th>Thành tiền</th>\r\n                                            </tr>\r\n                                            {order.carts.map((cart) => (\r\n                                                <tr key={cart.id}>\r\n                                                    <td>\r\n                                                        <img src={cart.image_represent} alt={cart.name_product} />\r\n                                                    </td>\r\n                                                    <td>{cart.name_product}</td>\r\n                                                    <td>{cart.price_bought}</td>\r\n                                                    <td>{cart.quantity}</td>\r\n                                                    <td className=\"total_money\">{cart.price_bought * cart.quantity}</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </table>\r\n                                        <p>Tổng tiền: {order.total_money}</p>\r\n                                    </div>\r\n                                ) : null,\r\n                            )}\r\n                        </table>\r\n                        <button type=\"submit\" onClick={() => handleSubmitBill(filteredOrders)}>\r\n                            Xác nhận đặt hàng\r\n                        </button>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pay;\r\n","F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\introduce\\Introduce.js",["229","230","231","232","233"],[],"F:\\hanhptn\\reactjs\\tiktok\\src\\components\\map\\Map.js",["234"],[],"F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\Product.js",["235","236","237","238","239","240","241"],[],"F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\contact\\Contact.js",["242","243"],[],"F:\\hanhptn\\reactjs\\tiktok\\src\\pages\\policy\\Policy.js",[],[],"E:\\TTTN\\website_plant\\src\\index.js",[],[],[],"E:\\TTTN\\website_plant\\src\\reportWebVitals.js",[],[],"E:\\TTTN\\website_plant\\src\\App.js",["244"],[],"import Header from './components/header/Header';\nimport './App.css';\nimport { Fragment } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport Product from './pages/product/Product';\nimport Carts from './pages/carts/Carts';\nimport Pay from './pages/pay/Pay';\nimport Body from './components/body/Body';\nimport Footer from './components/footer/Footer';\nimport Login from './pages/login/Login';\nimport Register from './pages/register/Register';\nimport Introduce from './pages/introduce/Introduce';\nimport Contact from './pages/contact/Contact';\nimport Policy from './pages/policy/Policy';\nimport Info from './pages/info/Info';\nimport { readApiCart } from './Api';\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [username, setUsername] = useState('');\n    const [idFlag, setIdFlag] = useState('');\n\n    const handleLogin = (username, id) => {\n        setIsLoggedIn(true);\n        setUsername(username);\n        setIdFlag(id);\n\n        localStorage.setItem('isLoggedIn', true);\n        localStorage.setItem('idFlag', id);\n        localStorage.setItem('username', username);\n    };\n\n    const handleLogout = () => {\n        setIsLoggedIn(false);\n        setUsername('');\n        setIdFlag('');\n        localStorage.removeItem('isLoggedIn');\n        localStorage.removeItem('username');\n        localStorage.removeItem('idFlag');\n    };\n\n    useEffect(() => {\n        const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n        const storedUsername = localStorage.getItem('username');\n        const storedIdFlag = localStorage.getItem('idFlag');\n        if (storedIsLoggedIn && storedUsername) {\n            setIsLoggedIn(true);\n            setUsername(storedUsername);\n            setIdFlag(storedIdFlag);\n        }\n    }, []);\n\n    const [carts, setCarts] = useState([]);\n    const updateCarts = () => {\n        fetch(readApiCart)\n            .then((response) => response.json())\n            .then((data) => {\n                const filteredData = data.filter((item) => item.id_owner === idFlag);\n                setCarts(filteredData);\n            });\n    };\n\n    return (\n        <Router>\n            {isLoggedIn ? (\n                <>\n                    <Header\n                        onCartUpdate={updateCarts}\n                        isLoggedIn={isLoggedIn}\n                        username={username}\n                        id={idFlag}\n                        onLogout={handleLogout}\n                    />\n                    <div className=\"App\">\n                        <Routes>\n                            <Route\n                                path=\"/\"\n                                element={[\n                                    <Body onCartUpdate={updateCarts} username={username} id={idFlag} />,\n                                    <Footer />,\n                                ]}\n                            />\n                            <Route\n                                path=\"/product\"\n                                element={\n                                    <Product\n                                        onCartUpdate={updateCarts}\n                                        isLoggedIn={isLoggedIn}\n                                        username={username}\n                                        iduser={idFlag}\n                                    />\n                                }\n                            />\n                            <Route\n                                path=\"/introduce\"\n                                element={<Introduce isLoggedIn={isLoggedIn} username={username} ids={idFlag} />}\n                            />\n                            <Route\n                                path=\"/contact\"\n                                element={<Contact isLoggedIn={isLoggedIn} username={username} ids={idFlag} />}\n                            />\n                            <Route\n                                path=\"/policy\"\n                                element={<Policy isLoggedIn={isLoggedIn} username={username} ids={idFlag} />}\n                            />\n                            <Route\n                                path=\"/carts\"\n                                element={<Carts isLoggedIn={isLoggedIn} username={username} id={idFlag} />}\n                            />\n                            <Route\n                                path=\"/info\"\n                                element={<Info isLoggedIn={isLoggedIn} username={username} id={idFlag} />}\n                            />\n                            <Route\n                                path=\"/pay\"\n                                element={<Pay isLoggedIn={isLoggedIn} username={username} id={idFlag} />}\n                            />\n                            <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n                            <Route path=\"/register\" />\n                        </Routes>\n                    </div>\n                </>\n            ) : (\n                <>\n                    <div className=\"App\">\n                        <Routes>\n                            <Route\n                                path=\"/\"\n                                element={[\n                                    <Header\n                                        onCartUpdate={updateCarts}\n                                        isLoggedIn={isLoggedIn}\n                                        username={username}\n                                        id={idFlag}\n                                        onLogout={handleLogout}\n                                    />,\n                                    <Body onCartUpdate={updateCarts} username={username} id={idFlag} />,\n                                    <Footer />,\n                                ]}\n                            />\n                            <Route\n                                path=\"/introduce\"\n                                element={[\n                                    <Header\n                                        isLoggedIn={isLoggedIn}\n                                        username={username}\n                                        id={idFlag}\n                                        onLogout={handleLogout}\n                                    />,\n                                    <Introduce isLoggedIn={isLoggedIn} username={username} ids={idFlag} />,\n                                ]}\n                            />\n                            <Route\n                                path=\"/product\"\n                                element={[<Product isLoggedIn={isLoggedIn} username={username} iduser={idFlag} />]}\n                            />\n                            <Route\n                                path=\"/contact\"\n                                element={[\n                                    <Header\n                                        isLoggedIn={isLoggedIn}\n                                        username={username}\n                                        id={idFlag}\n                                        onLogout={handleLogout}\n                                    />,\n                                    <Contact isLoggedIn={isLoggedIn} username={username} ids={idFlag} />,\n                                ]}\n                            />\n                            <Route\n                                path=\"/policy\"\n                                element={[\n                                    <Header\n                                        isLoggedIn={isLoggedIn}\n                                        username={username}\n                                        id={idFlag}\n                                        onLogout={handleLogout}\n                                    />,\n                                    <Policy isLoggedIn={isLoggedIn} username={username} ids={idFlag} />,\n                                ]}\n                            />\n                            <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n                            <Route path=\"/register\" element={<Register />} />\n                        </Routes>\n                    </div>\n                </>\n            )}\n        </Router>\n    );\n}\n\nexport default App;\n","E:\\TTTN\\website_plant\\src\\Api.js",[],[],"E:\\TTTN\\website_plant\\src\\components\\header\\Header.js",["245","246","247","248","249","250","251","252","253"],[],"import React, { useState, useEffect } from 'react';\r\nimport './header.scss';\r\nimport { menuData } from '../../data-plants';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleXmark, faMagnifyingGlass, faSpinner, faCartShopping } from '@fortawesome/free-solid-svg-icons';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { deleteApiCart, readApiCart, readApiPlant } from '~/Api';\r\n\r\nconst Header = ({ isLoggedIn, username, id, onLogout, onCartUpdate}) => {\r\n    // tạo mảng lưu sản phẩm trong giỏ hàng\r\n    const [carts, setCarts] = useState([]);\r\n    const [cartsUpdated, setCartsUpdated] = useState(false);\r\n\r\n    //tạo kết nối giỏ hàng khi có thay đổi sẽ cập nhật\r\n    useEffect(() => {\r\n        fetch(readApiCart)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const filteredData = data.filter((item) => item.id_owner === id);\r\n                setCarts(filteredData);\r\n            });\r\n    }, [cartsUpdated]);\r\n    useEffect(() => {\r\n        fetch(readApiCart)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const filteredData = data.filter((item) => item.id_owner === id);\r\n                setCarts(filteredData);\r\n            });\r\n    }, [onCartUpdate]);\r\n    // Hàm cập nhật giỏ hàng khi có thay đổi\r\n    const updateCarts = () => {\r\n        setCartsUpdated(!cartsUpdated);\r\n    };\r\n    // Sử dụng hàm updateCarts để cập nhật giỏ hàng khi có thay đổi\r\n\r\n    const [menus, setMenus] = useState(menuData);\r\n    const history = useNavigate();\r\n    // xử lý đăng xuất\r\n    const handleLogout = (e) => {\r\n        e.preventDefault();\r\n        onLogout();\r\n        history('/login');\r\n    };\r\n\r\n    //xử lý xóa sản phẩm khỏi giỏ hàng\r\n    const handleRemoveProduct = (cart) => {\r\n        const formData2 = new FormData();\r\n        formData2.append('id_cart', cart.id_cart);\r\n        formData2.append('id_owner', cart.id_owner);\r\n        formData2.append('id_plant', cart.id_plant);\r\n        formData2.append('name_product', cart.name_product);\r\n        formData2.append('image_reprsent', cart.image_represent);\r\n        formData2.append('price_product', cart.price_product);\r\n        formData2.append('quantity', cart.quantity);\r\n        fetch(deleteApiCart, {\r\n            method: 'POST',\r\n            body: formData2,\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    updateCarts(); //gọi hàm update giỏ hàng\r\n                } else {\r\n                    throw new Error('Có lỗi xảy ra khi xóa sản phẩm.');\r\n                }\r\n            })\r\n            .catch((error) => console.error('Error deleting product:', error));\r\n    };\r\n\r\n    // tìm kiếm\r\n    const [searchPlants, setSearchPlants] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    // Gửi yêu cầu API hoặc truy vấn cơ sở dữ liệu để lấy dữ liệu dựa vào giá trị id\r\n    useEffect(() => {\r\n        fetch(readApiPlant)\r\n            .then((response) => response.json())\r\n            .then((data) => setSearchPlants(data));\r\n    }, []);\r\n\r\n    const handleSearch = () => {\r\n        if (searchTerm === '') {\r\n            setSearchResults([]);\r\n        } else {\r\n            setTimeout(() => {\r\n                const filteredResults = searchPlants.filter((searchPlant) =>\r\n                    searchPlant.name.toLowerCase().includes(searchTerm.toLowerCase()),\r\n                );\r\n                setSearchResults(filteredResults);\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleSearch();\r\n    }, [searchTerm]); // Chỉ gọi handleSearch khi searchTerm thay đổi\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <div className=\"header-first\">\r\n                    <ul className=\"main-menu\">\r\n                        {menus.map((menu) => {\r\n                            return (\r\n                                <>\r\n                                    <li>\r\n                                        <a href={menu.path}>{menu.name}</a>\r\n                                    </li>\r\n                                </>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                    <div className=\"check-account\">\r\n                        {isLoggedIn ? (\r\n                            <>\r\n                                <div className=\"cart\">\r\n                                    <FontAwesomeIcon className=\"cart-icon\" icon={faCartShopping} />\r\n                                    <span class=\"header__cart-notice\">\r\n                                        {carts.length === 0 ? (\r\n                                            <>\r\n                                                <span>{carts.length}</span>\r\n                                                <div className=\"cart-list\">\r\n                                                    <h4 class=\"cart-heading\">Hiện chưa có sản phẩm trong giỏ hàng</h4>\r\n                                                </div>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <span>{carts.length}</span>\r\n                                                <div className=\"cart-list\">\r\n                                                    <h4 class=\"cart-heading\">Sản phẩm đã thêm</h4>\r\n                                                    <ul class=\"cart-list-item\">\r\n                                                        {carts.map((cart) => (\r\n                                                            <>\r\n                                                                <li class=\"cart-item\">\r\n                                                                    <img\r\n                                                                        className=\"cart-img\"\r\n                                                                        src={cart.image_represent}\r\n                                                                    ></img>\r\n                                                                    <div class=\"cart-item-info\">\r\n                                                                        <div class=\"cart-item-head\">\r\n                                                                            <h5 class=\"cart-item-name\">\r\n                                                                                {cart.name_product}\r\n                                                                            </h5>\r\n                                                                            <div class=\"cart-item-price-wrap\">\r\n                                                                                <span class=\"cart-item-price\">\r\n                                                                                    {cart.price_bought}\r\n                                                                                </span>\r\n                                                                                <span class=\"cart-item-multiply\">\r\n                                                                                    x\r\n                                                                                </span>\r\n                                                                                <span class=\"cart-item-qnt\">\r\n                                                                                    {cart.quantity}\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"cart-item-body\">\r\n                                                                            <span class=\"cart-item-description\">\r\n                                                                                Giá bán: {cart.price_product}\r\n                                                                            </span>\r\n                                                                            <button\r\n                                                                                class=\"cart-remove-product\"\r\n                                                                                onClick={() =>\r\n                                                                                    handleRemoveProduct(cart)\r\n                                                                                }\r\n                                                                            >\r\n                                                                                Xóa\r\n                                                                            </button>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </li>\r\n                                                            </>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                    <a href=\"http://localhost:2112/carts\" class=\"view-cart btn-cart\">\r\n                                                        Xem giỏ hàng\r\n                                                    </a>\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <form className=\"after-login\" onSubmit={handleLogout}>\r\n                                    <div class=\"info-account account-ui\">\r\n                                        <img\r\n                                            src=\"https://saigonbling.b-cdn.net/wp-content/uploads/2022/07/ho-ly-la-gi-2.jpg\"\r\n                                            className=\"account-user-avatar\"\r\n                                        ></img>\r\n                                        <span class=\"account-user-name\">{username}</span>\r\n                                        <ul class=\"account-menu\">\r\n                                            <li>\r\n                                                <button className=\"btn-logout\" type=\"submit\">\r\n                                                    Đăng xuất\r\n                                                </button>\r\n                                            </li>\r\n                                            <li>\r\n                                                <button className=\"link_info\">\r\n                                                    <a href='/info'>Thông tin</a>\r\n                                                </button>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </form>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <button className=\"btn-header btn-login-header\">\r\n                                    <a href=\"http://localhost:2112/login\">Đăng nhập</a>\r\n                                </button>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"header-second\">\r\n                    <img className=\"logo\" src=\"./logo.jpg\" alt=\"\" />\r\n                    <h3>Mang lợi ích cho không gian xanh</h3>\r\n                    <div className=\"search\">\r\n                        <input\r\n                            placeholder=\"Tìm kiếm cây cảnh\"\r\n                            value={searchTerm}\r\n                            spellCheck={false}\r\n                            onChange={(e) => setSearchTerm(e.target.value)}\r\n                        />\r\n\r\n                        <button1 className=\"search-btn\" onClick={handleSearch}>\r\n                            <FontAwesomeIcon icon={faMagnifyingGlass} />\r\n                        </button1>\r\n\r\n                        {searchResults.length > 0 && (\r\n                            <div className=\"search-results\">\r\n                                {searchResults.map((result) => (\r\n                                    <p className=\"list\" key={result.id}>\r\n                                        <a href={`/product?id=${result.id}`}>{result.name}</a>\r\n                                    </p>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"header-third\">\r\n                    <div className=\"tree-category\">\r\n                        <ul className=\"tree-type\">\r\n                            <img src=\"sen-da-mini.jpg\" alt=\"\" />\r\n                            <li>\r\n                                <a href=\"http://localhost:2112/#CAY_MAY_MAN\">CÂY MAY MẮN</a>\r\n                            </li>\r\n                            <img src=\"sen-da-mini.jpg\" alt=\"\" />\r\n                            <li>\r\n                                <a href=\"http://localhost:2112/#CAY_DE_BAN\">CÂY ĐỂ BÀN</a>\r\n                            </li>\r\n                            <img src=\"sen-da-mini.jpg\" alt=\"\" />\r\n                            <li>\r\n                                <a href=\"http://localhost:2112/#CAY_THUY_SINH\">CÂY THỦY SINH</a>\r\n                            </li>\r\n                            <img src=\"sen-da-mini.jpg\" alt=\"\" />\r\n                            <li>\r\n                                <a href=\"http://localhost:2112/#CAY_NOI_THAT\">CÂY NỘI THẤT</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","E:\\TTTN\\website_plant\\src\\components\\footer\\Footer.js",["254","255","256","257"],[],"import './footer.scss';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <div class=\"footer-container\">\r\n                <div class=\"grid wide\">\r\n                    <div class=\"footer-bar\">\r\n                        <div class=\"footer__col\">\r\n                            <div class=\"footer__col-group\">\r\n                                <label class=\"footer__label\">Thông tin chung</label>\r\n                                <img src=\"logo.jpg\" style={{ width: `50%`, height: `50%` }}></img>\r\n                                <a href=\"\" class=\"footer__link\">\r\n                                    Thực tập tốt nghiệp\r\n                                </a>\r\n                                <a href=\"\" class=\"footer__link\">\r\n                                    Giáo viên hướng dẫn: Vũ Đình Long\r\n                                </a>\r\n                                <a href=\"\" class=\"footer__link\">\r\n                                    Sinh viên thực hiện: Phan Thiên Nhân Hạnh - 2051120229\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"footer__col\">\r\n                            <div class=\"footer__col-group\">\r\n                                <label class=\"footer__label\">Thông tin, chính sách và điều khoản sử dụng</label>\r\n                                <a href=\"/policy\" class=\"footer__link\">\r\n                                    Mua hàng và thanh toán\r\n                                </a>\r\n                                <a href=\"/policy\" class=\"footer__link\">\r\n                                    Mua trả góp sản phẩm\r\n                                </a>\r\n                                <a href=\"/policy\" class=\"footer__link\">\r\n                                    Tra cứu thông tin đơn hàng\r\n                                </a>\r\n                                <a href=\"/policy\" class=\"footer__link\">\r\n                                    Tra cứu ưu đãi\r\n                                </a>\r\n                                <a href=\"/policy\" class=\"footer__link\">\r\n                                    Tra cứu thông tin bảo hành\r\n                                </a>\r\n                                <a href=\"/policy\" class=\"footer__link\">\r\n                                    Tra cứu hóa đơn điện tử\r\n                                </a>\r\n                                <a href=\"/policy\" class=\"footer__link\">\r\n                                    Chính sách bảo hành\r\n                                </a>\r\n                                <a href=\"/policy\" class=\"footer__link\">\r\n                                    Chính sách hậu mãi\r\n                                </a>\r\n                                <a href=\"/policy\" class=\"footer__link\">\r\n                                    Điều khoản sử dụng\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"footer__col\">\r\n                            <div class=\"footer__col-group\">\r\n                                <label class=\"footer__label\">\r\n                                    Liên hệ hỗ trợ 24/7\r\n                                    <span style={{ fontWeight: `bold`, color: `red` }}>(Miễn phí tư vấn)</span>\r\n                                </label>\r\n                                <div href=\"/\" class=\"footer__text\">\r\n                                    <p class=\"footer__text-title\">Hỗ trợ mua hàng:</p>\r\n                                    <span\r\n                                        class=\"footer__text-info\"\r\n                                        style={{ fontWeight: `bold`, color: `green`, paddingRight: `6px` }}\r\n                                    >\r\n                                        0332212xxx\r\n                                    </span>\r\n                                    <span class=\"hide-on-mobile\">(24/7)</span>\r\n                                </div>\r\n                                <div href=\"/\" class=\"footer__text\">\r\n                                    <p class=\"footer__text-title\">Hỗ trợ kỹ thuật:</p>\r\n                                    <span style={{ fontWeight: `bold`, color: `green`, paddingRight: `6px` }}>\r\n                                        0332212xxx\r\n                                    </span>\r\n                                    <span class=\"hide-on-mobile\">(Giờ hành chính)</span>\r\n                                </div>\r\n                                <div href=\"/\" class=\"footer__text\">\r\n                                    <p class=\"footer__text-title\">Giải quyết khiếu nại:</p>\r\n                                    <span style={{ fontWeight: `bold`, color: `green`, paddingRight: `6px` }}>\r\n                                        0332212xxx\r\n                                    </span>\r\n                                    <span class=\"hide-on-mobile\">(24/7)</span>\r\n                                </div>\r\n                                <div href=\"/\" class=\"footer__text\">\r\n                                    <p class=\"footer__text-title\">Bảo hành sản phẩm:</p>\r\n                                    <span style={{ fontWeight: `bold`, color: `green`, paddingRight: `6px` }}>\r\n                                        0332212xxx\r\n                                    </span>\r\n                                    <span class=\"hide-on-mobile\">(Giờ hành chính)</span>\r\n                                </div>\r\n                                <div href=\"/\" class=\"footer__text\">\r\n                                    <p class=\"footer__text-title\">Vấn đề khác:</p>\r\n                                    <span style={{ fontWeight: `bold`, color: `green`, paddingRight: `6px` }}>\r\n                                        0332212xxx\r\n                                    </span>\r\n                                    <span class=\"hide-on-mobile\">(Giờ hành chính)</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","E:\\TTTN\\website_plant\\src\\components\\body\\Body.js",["258","259","260","261","262","263","264","265","266","267","268","269"],[],"E:\\TTTN\\website_plant\\src\\pages\\carts\\Carts.js",["270","271","272","273","274","275","276","277","278"],[],"import Header from '~/components/header/Header';\r\nimport Footer from '~/components/footer/Footer';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './carts.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    fa1,\r\n    fa2,\r\n    fa3,\r\n    faCartShopping,\r\n    faCheck,\r\n    faChevronRight,\r\n    faCircle,\r\n    faMoneyBill1Wave,\r\n    faSpa,\r\n    faStar,\r\n    faTree,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { readApiCart, updateApiCart } from '~/Api';\r\n\r\nfunction Carts({ isLoggedIn, username, id }) {\r\n    // chứa các sản phẩm có id trùng với client\r\n    const [carts, setCarts] = useState([]);\r\n    const [totalMoney, setTotalMoney] = useState(0);\r\n    const [quantities, setQuantities] = useState([]);\r\n    // tạo kết nối\r\n    useEffect(() => {\r\n        fetch(`${readApiCart}?id_owner=${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setCarts(data);\r\n                const newQuantities = {};\r\n                data.forEach((cart) => {\r\n                    newQuantities[cart.id_plant] = cart.quantity; // Lưu quantity theo cart id\r\n                });\r\n\r\n                setQuantities(newQuantities); // Cập nhật state quantities\r\n            });\r\n    }, [quantities]);\r\n\r\n    // cập nhật tổng số tiền\r\n    useEffect(() => {\r\n        updateTotalMoney();\r\n    }, [quantities]);\r\n\r\n    const updateTotalMoney = () => {\r\n        let total = 0;\r\n        carts.forEach((cart) => {\r\n            const quantity = quantities[cart.id_plant] || cart.quantity;\r\n            total += cart.price_product * quantity;\r\n        });\r\n        setTotalMoney(total);\r\n    };\r\n\r\n    // giảm số lượng sản phẩm đi 1\r\n    const idString = id.toString();\r\n    const decreaseQuantity = (id, id_plant, cart) => {\r\n        let count = 0;\r\n        // Gửi request GET đến API để lấy dữ liệu hiện tại\r\n        fetch(readApiCart)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                // Kiểm tra xem sản phẩm đã tồn tại trong giỏ hàng chưa\r\n                const existingCartItem = data.find((item) => item.id_owner === idString && item.id_plant === id_plant);\r\n\r\n                if (existingCartItem) {\r\n                    count = parseInt(existingCartItem.quantity, 10);\r\n                    if (count === 0) {\r\n                    } else {\r\n                        count = count - 1;\r\n                        const formData2 = new FormData();\r\n                        // formData2.append('id_cart', NULL);\r\n                        formData2.append('id_owner', idString);\r\n                        formData2.append('id_plant', cart.id_plant);\r\n                        formData2.append('name_product', cart.name_product);\r\n                        formData2.append('image_represent', cart.image_represent);\r\n                        formData2.append('price_product', cart.price_priduct);\r\n                        formData2.append('quantity', count);\r\n                        fetch(updateApiCart, {\r\n                            method: 'POST',\r\n                            body: formData2,\r\n                        })\r\n                            .then((response) => response.json())\r\n                            .then((data) => {})\r\n                            .catch((error) => console.error('Error updating cart item:', error));\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n    // tăng lên 1\r\n    const increaseQuantity = (id, id_plant, cart) => {\r\n        let count = 0;\r\n        // Gửi request GET đến API để lấy dữ liệu hiện tại\r\n        fetch(readApiCart)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                // Kiểm tra xem sản phẩm đã tồn tại trong giỏ hàng chưa\r\n                const existingCartItem = data.find((item) => item.id_owner === idString && item.id_plant === id_plant);\r\n\r\n                if (existingCartItem) {\r\n                    count = parseInt(existingCartItem.quantity, 10);\r\n                    count = count + 1;\r\n                    const formData2 = new FormData();\r\n                    // formData2.append('id_cart', NULL);\r\n                    formData2.append('id_owner', idString);\r\n                    formData2.append('id_plant', cart.id_plant);\r\n                    formData2.append('name_product', cart.name_product);\r\n                    formData2.append('image_represent', cart.image_represent);\r\n                    formData2.append('price_product', cart.price_priduct);\r\n                    formData2.append('quantity', count);\r\n                    fetch(updateApiCart, {\r\n                        method: 'POST',\r\n                        body: formData2,\r\n                    })\r\n                        .then((response) => response.json())\r\n                        .then((data) => {})\r\n                        .catch((error) => console.error('Error updating cart item:', error));\r\n                }\r\n            });\r\n    };\r\n\r\n    // xử lý thanh toán\r\n    const history = useNavigate();\r\n    const handlePay = (carts, total_money) => {\r\n        history('/pay');\r\n    };\r\n    \r\n\r\n    return (\r\n        <>\r\n            {isLoggedIn ? (\r\n                <></>\r\n            ) : (\r\n                <>\r\n                    <Header isLoggedIn={isLoggedIn} username={username} />\r\n                </>\r\n            )}\r\n\r\n            <div className=\"section-first-title\">\r\n                <FontAwesomeIcon icon={faTree} />\r\n                <h3>Thông tin giỏ hàng</h3>\r\n                <FontAwesomeIcon icon={faTree} />\r\n                <div className=\"icon-mid\">\r\n                    <FontAwesomeIcon icon={faSpa} />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"container_list_carts\">\r\n                <div class=\"top_infomation\">\r\n                    <div class=\"stages_of_cart\">\r\n                        <div class=\"stage_1_carts\">\r\n                            <FontAwesomeIcon className=\"phase\" icon={faCartShopping} />\r\n                            <p>Giỏ hàng của tôi</p>\r\n                            <div class=\"stage_1_carts_icon\">\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"stage_2\">\r\n                            <FontAwesomeIcon className=\"phase\" icon={faMoneyBill1Wave} />\r\n                            <p>Thông tin thanh toán</p>\r\n                            <div class=\"stage_2_carts_icon\">\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"stage_3\">\r\n                            <FontAwesomeIcon className=\"phase\" icon={faCheck} />\r\n                            <p>Giỏ hàng của tôi</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"bottom_infomation\">\r\n                    <div class=\"section_products_cart\">\r\n                        <table class=\"list_products\">\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Tên sản phẩm</th>\r\n                                <th>Giá cả</th>\r\n                                <th>Số lượng</th>\r\n                                <th>Thành tiền</th>\r\n                            </tr>\r\n                            {carts.map((cart) => (\r\n                                <>\r\n                                    <tr key={cart.id_cart}>\r\n                                        <td>\r\n                                            <img src={cart.image_represent} />\r\n                                        </td>\r\n                                        <td>{cart.name_product}</td>\r\n                                        <td>{cart.price_product}</td>\r\n                                        <td>\r\n                                            <div className=\"quantity\">\r\n                                                <button\r\n                                                    className=\"btn_minus\"\r\n                                                    onClick={() => decreaseQuantity(cart.id_cart, cart.id_plant, cart)}\r\n                                                >\r\n                                                    -\r\n                                                </button>\r\n\r\n                                                <span className=\"quantity_value\">{quantities[cart.id_plant]}</span>\r\n                                                <button\r\n                                                    className=\"btn_plus\"\r\n                                                    onClick={() => increaseQuantity(cart.id_cart, cart.id_plant, cart)}\r\n                                                >\r\n                                                    +\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td className=\"total_money\">{cart.price_product * quantities[cart.id_plant]}</td>\r\n                                    </tr>\r\n                                </>\r\n                            ))}\r\n                        </table>\r\n                        <div className=\"total_money_cart\">\r\n                            <p className=\"result\">\r\n                                Tổng tiền: <span>{totalMoney}</span>\r\n                            </p>\r\n                            <button className=\"continute_buy_product\">\r\n                                <a href=\"http://localhost:2112\">Tiếp tục mua hàng</a>\r\n                            </button>\r\n                            <button className=\"pay\" onClick={() => handlePay(carts)}>\r\n                                Thanh toán\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Carts;\r\n","E:\\TTTN\\website_plant\\src\\pages\\product\\Product.js",["279","280","281","282","283","284","285","286","287","288"],[],"import Header from '~/components/header/Header';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Footer from '~/components/footer/Footer';\r\nimport './product.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartShopping, faClover, faHouse, faSpa, faStar, faTree } from '@fortawesome/free-solid-svg-icons';\r\nimport { createApiCart, createApiComment, readApiCart, readApiComment, readApiPlant, updateApiCart } from '~/Api';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Product({ isLoggedIn, username, iduser, onCartUpdate }) {\r\n    // Lấy giá trị id từ URL\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const id = urlParams.get('id');\r\n    const navigate = useNavigate();\r\n\r\n    // chứa thông tin danh sách hàng\r\n    const [plants, setPlants] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(`${readApiPlant}?id=${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                // Lọc các cây theo loại và lưu vào state\r\n                // const type_Plant = data.filter((plant) => setType_Plant(plant.type_plant));\r\n                data.filter((plant) => setType_Plant(plant.type_plant));\r\n                setPlants(data);\r\n            });\r\n    }, []);\r\n\r\n    // chứa thông tin danh sách hàng\r\n    const [list_plants, setListPlants] = useState([]);\r\n    const [type_plant, setType_Plant] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (type_plant !== '') {\r\n            // Đảm bảo type_plant đã có giá trị trước khi fetch\r\n            fetch(`${readApiPlant}?type_plant=${type_plant}`)\r\n                .then((response) => response.json())\r\n                .then((data) => setListPlants(data));\r\n        }\r\n    }, [type_plant]); // Theo dõi sự thay đổi của type_plant để kích hoạt useEffect\r\n\r\n    function changeImage(imagePath) {\r\n        var largeImage = document.getElementById('largeImage');\r\n        largeImage.src = imagePath;\r\n    }\r\n    const idString = iduser.toString();\r\n    //thêm sản phẩm vào giỏ hàng\r\n    const handleClickAddToCart = (plant) => {\r\n        if (idString === '') {\r\n            toast.warning('Bạn chưa đăng nhập!');\r\n            navigate('/login');\r\n        } else {\r\n            handleAddToCart(plant);\r\n        }\r\n    };\r\n\r\n    const handleAddToCart = (plantId) => {\r\n        // Gửi request GET đến API để lấy dữ liệu hiện tại\r\n        let count = 0;\r\n        fetch(readApiCart)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const existingCartItem = data.find(\r\n                    (item) => item.id_owner === idString && item.id_plant === plantId.id,\r\n                );\r\n\r\n                if (existingCartItem) {\r\n                    count = parseInt(existingCartItem.quantity, 10);\r\n                    count = count + 1;\r\n                    const formData2 = new FormData();\r\n                    formData2.append('id_owner', idString);\r\n                    formData2.append('id_plant', plantId.id);\r\n                    formData2.append('name_product', plantId.name);\r\n                    formData2.append('image_represent', plantId.picture_main);\r\n                    formData2.append('price_product', plantId.price_new);\r\n                    formData2.append('quantity', count);\r\n                    fetch(updateApiCart, {\r\n                        method: 'POST',\r\n                        body: formData2,\r\n                    })\r\n                        .then((response) => response.json())\r\n                        .then((data) => {\r\n                            toast.success('Thêm sản phẩm thành công!');\r\n                        })\r\n                        .catch((error) => console.error('Error updating cart item:', error));\r\n                } else {\r\n                    const formData2 = new FormData();\r\n                    formData2.append('id_owner', idString);\r\n                    formData2.append('id_plant', plantId.id);\r\n                    formData2.append('name_product', plantId.name);\r\n                    formData2.append('image_represent', plantId.picture_main);\r\n                    formData2.append('price_product', plantId.price_new - (plantId.price_new * plantId.discount) / 100);\r\n                    formData2.append('quantity', 1);\r\n\r\n                    fetch(createApiCart, {\r\n                        method: 'POST',\r\n                        body: formData2,\r\n                    })\r\n                        .then((response) => {\r\n                            if (response.ok) {\r\n                                toast.success('Thêm sản phẩm thành công!');\r\n                            } else {\r\n                                throw new Error('Có lỗi xảy ra khi xóa sản phẩm.');\r\n                            }\r\n                        })\r\n                        .catch((error) => console.error('Error deleting product:', error));\r\n                }\r\n                \r\n            });\r\n        onCartUpdate();\r\n    };\r\n\r\n    const [content, setContent] = useState('');\r\n    const [starts, setStarts] = useState(5);\r\n    //thêm nhận xét đánh giá sản phẩm\r\n    const handleCreateComment = () => {\r\n        if (idString === '') {\r\n            toast.warning('Bạn chưa đăng nhập!');\r\n            navigate('/login');\r\n        } else {\r\n            const formData2 = new FormData();\r\n            formData2.append('id_owner', iduser);\r\n            formData2.append('id_plant', id);\r\n            formData2.append('content', content);\r\n            formData2.append('start', starts);\r\n            if (content === '') {\r\n                toast.warning('Bạn chưa nhập nội dung bình luận!');\r\n            } else {\r\n                fetch(createApiComment, {\r\n                    method: 'POST',\r\n                    body: formData2,\r\n                })\r\n                    .then((response) => {\r\n                        if (response.ok) {\r\n                        } else {\r\n                            throw new Error('Có lỗi xảy ra khi thêm bình luận.');\r\n                        }\r\n                    })\r\n                    .catch((error) => console.error('Error add comment:', error));\r\n\r\n                setReloadComment(true);\r\n                toast.success('Thêm bình luận thành công!');\r\n            }\r\n        }\r\n       \r\n    };\r\n\r\n    // lấy danh sách đánh giá theo mã sản phẩm\r\n    const [comments, setComments] = useState([]);\r\n    const [reloadComment, setReloadComment] = useState(false);\r\n    useEffect(() => {\r\n        fetch(`${readApiComment}?id_plant=${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setComments(data);\r\n                setReloadComment(false);\r\n            });\r\n    }, [reloadComment]);\r\n\r\n    const [avgStart, setAvgStart] = useState(null);\r\n    useEffect(() => {\r\n        fetch(`${readApiComment}?id_plants=${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                let totalStart = 0;\r\n\r\n                for (const comment of data) {\r\n                    totalStart += parseFloat(comment.sosao); // Chuyển sosao từ chuỗi sang số để tính toán\r\n                }\r\n                let totalSl = 0;\r\n\r\n                for (const comment of data) {\r\n                    totalSl += parseFloat(comment.sl); // Chuyển sosao từ chuỗi sang số để tính toán\r\n                }\r\n                console.log(totalSl);\r\n                const averageStart = totalSl > 0 ? totalStart / totalSl : 0;\r\n                const formattedAvgStart = averageStart.toFixed(1); // Định dạng có 1 chữ số sau dấu phẩy\r\n                setAvgStart(formattedAvgStart);\r\n                setReloadComment(false);\r\n            });\r\n    }, [reloadComment]);\r\n\r\n    return (\r\n        <>\r\n            {isLoggedIn ? (\r\n                <></>\r\n            ) : (\r\n                <>\r\n                    <Header isLoggedIn={isLoggedIn} username={username} />\r\n                </>\r\n            )}\r\n\r\n            <div className=\"section-first-title\">\r\n                <FontAwesomeIcon icon={faTree} />\r\n                <h3>CHI TIẾT SẢN PHẨM</h3>\r\n                <FontAwesomeIcon icon={faTree} />\r\n                <div className=\"icon-mid\">\r\n                    <FontAwesomeIcon icon={faSpa} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"section_body_detail_product\">\r\n                <div className=\"section_left\">\r\n                    <div className=\"detail-product\">\r\n                        {plants.map((plant) => (\r\n                            <>\r\n                                <div className=\"detail-image\">\r\n                                    <img\r\n                                        className=\"main-image\"\r\n                                        id=\"largeImage\"\r\n                                        src={plant.picture_main}\r\n                                        alt=\"Large Image\"\r\n                                    ></img>\r\n                                    <div className=\"list-extra-image\">\r\n                                        <img\r\n                                            className=\"extra-image image-first\"\r\n                                            src={plant.picture_main}\r\n                                            onClick={() => changeImage(plant.picture_main)}\r\n                                        ></img>\r\n                                        <img\r\n                                            className=\"extra-image image-second\"\r\n                                            src={plant.picture_other_1}\r\n                                            onClick={() => changeImage(plant.picture_other_1)}\r\n                                        ></img>\r\n                                        <img\r\n                                            className=\"extra-image image-threee\"\r\n                                            src={plant.picture_other_2}\r\n                                            onClick={() => changeImage(plant.picture_other_2)}\r\n                                        ></img>\r\n                                        <img\r\n                                            className=\"extra-image image-four\"\r\n                                            src={plant.picture_other_3}\r\n                                            onClick={() => changeImage(plant.picture_other_3)}\r\n                                        ></img>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"seperate\"> </span>\r\n                                <div className=\"detail-content\">\r\n                                    <h3>{plant.name}</h3>\r\n\r\n                                    <p className=\"info-product\">\r\n                                        Cây cảnh toát lên vẻ đẹp tự nhiên, kết hợp hình dáng, màu sắc và sự sống, làm\r\n                                        tươi mới mọi không gian.\r\n                                    </p>\r\n\r\n                                    <div className=\"price-product\">\r\n                                        <div className=\"real-price\">\r\n                                            <span style={{ color: 'green', marginRight: '12px' }}>Giá sản phẩm</span>\r\n                                            <p>{plant.price_new - (plant.price_new * plant.discount) / 100} VND</p>\r\n                                        </div>\r\n\r\n                                        <p className=\"discount-price\">\r\n                                            <span> Giá cũ: {plant.price_new} VND</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"save-money\">\r\n                                        <p>\r\n                                            Tiết kiệm: <span>{plant.discount}%</span>\r\n                                        </p>\r\n                                        {/* <p className=\"discount-price\">Giá cũ: <span>200000</span></p> */}\r\n                                    </div>\r\n\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <button\r\n                                            className=\"add-product-detail\"\r\n                                            onClick={() => handleClickAddToCart(plant)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faCartShopping} /> Thêm vào giỏ hàng\r\n                                        </button>\r\n                                        {idString === '' ? null : (\r\n                                            <button className=\"view-product-detail\">\r\n                                                <FontAwesomeIcon icon={faCartShopping} />\r\n                                                <a href={`/carts`}>Xem giỏ hàng</a>\r\n                                            </button>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"category-plants-product\">\r\n                        <div id=\"comment\" class=\"product__reviews\">\r\n                            <h3 class=\"product__reviews-title desc-title\">Đánh giá sản phẩm</h3>\r\n                            <div class=\"box-rating\">\r\n                                <div class=\"average-rating\">\r\n                                    <h4>Trung bình đánh giá:</h4>\r\n                                    <div className=\"aver-rating\">\r\n                                        <span class=\"rating center\">{avgStart}/5</span>\r\n                                        <div class=\"star center\">\r\n                                            <FontAwesomeIcon className=\"icon_service\" icon={faStar} />\r\n                                            <FontAwesomeIcon className=\"icon_service\" icon={faStar} />\r\n                                            <FontAwesomeIcon className=\"icon_service\" icon={faStar} />\r\n                                            <FontAwesomeIcon className=\"icon_service\" icon={faStar} />\r\n                                            <FontAwesomeIcon className=\"icon_service\" icon={faStar} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"box-form\">\r\n                                <div enctype=\"multipart/form-data\">\r\n                                    <div class=\"selectStar\">\r\n                                        <span>\r\n                                            5 <FontAwesomeIcon className=\"icon_service\" icon={faStar} />\r\n                                        </span>\r\n                                        <select\r\n                                            name=\"star_select\"\r\n                                            id=\"star_select\"\r\n                                            onChange={(e) => setStarts(e.target.value)}\r\n                                        >\r\n                                            <option value=\"5\">5 sao</option>\r\n                                            <option value=\"4\">4 sao</option>\r\n                                            <option value=\"3\">3 sao</option>\r\n                                            <option value=\"2\">2 sao</option>\r\n                                            <option value=\"1\">1 sao</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <input\r\n                                        class=\"item2\"\r\n                                        name=\"text\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Nhập đánh giá sản phẩm...\"\r\n                                        value={content}\r\n                                        onChange={(e) => setContent(e.target.value)}\r\n                                    />\r\n                                    <button class=\"item3\" id=\"comment\" name=\"comment\" onClick={handleCreateComment}>\r\n                                        Gửi\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"box_review\">\r\n                                <div class=\"box-content\">\r\n                                    {comments.map((comment) => (\r\n                                        <div class=\"box-item\">\r\n                                            <div class=\"avatar\">\r\n                                                <span><img style={{ width: '40px', height: '40px', borderRadius: '20px', marginTop: '8px' }} src='user.png'></img></span>\r\n                                            </div>\r\n                                            <div class=\"comment\">\r\n                                                <span class=\"user-name\">{comment.name_client}</span>\r\n                                                <div class=\"star-cmt\">\r\n                                                    <span class=\"rating\">\r\n                                                        {comment.start}{' '}\r\n                                                        <FontAwesomeIcon className=\"icon_service\" icon={faStar} />\r\n                                                    </span>\r\n                                                    <span class=\"comment-container\">{comment.content}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section_right\">\r\n                    <div className=\"services\">\r\n                        <div className=\"title_service\">\r\n                            <h4>Tiện ích cửa hàng</h4>\r\n                        </div>\r\n                        <div className=\"content-service\">\r\n                            <div className=\"detail-service\">\r\n                                <FontAwesomeIcon className=\"icon_service\" icon={faStar} />\r\n                                <p>Chính sách hoàn trả sau 3 ngày</p>\r\n                            </div>\r\n                            <div className=\"detail-service\">\r\n                                <FontAwesomeIcon className=\"icon_service\" icon={faStar} />\r\n                                <p>Chất lượng sản phẩm cao</p>\r\n                            </div>\r\n                            <div className=\"detail-service\">\r\n                                <FontAwesomeIcon className=\"icon_service\" icon={faClover} />\r\n                                <p>Nhận tạo dáng, chăm sóc cây trồng</p>\r\n                            </div>\r\n                            <div className=\"detail-service\">\r\n                                <FontAwesomeIcon className=\"icon_service\" icon={faClover} />\r\n                                <p>Miễn phí vận chuyển nội thành</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"info_shop\">\r\n                        <div className=\"heading_shop\">\r\n                            <h4>Thông tin cửa hàng</h4>\r\n                        </div>\r\n                        <div className=\"detail_info\">\r\n                            <FontAwesomeIcon className=\"icon_info\" icon={faHouse} />\r\n                            <p>Chi nhánh A - Địa chỉ: Số 123, Đường ABC, Quận XYZ</p>\r\n                        </div>\r\n                        <div className=\"detail_info\">\r\n                            <FontAwesomeIcon className=\"icon_info\" icon={faHouse} />\r\n                            <p>Chi nhánh A - Địa chỉ: Số 123, Đường ABC, Quận XYZ</p>\r\n                        </div>\r\n                        <div className=\"detail_info\">\r\n                            <FontAwesomeIcon className=\"icon_info\" icon={faHouse} />\r\n                            <p>Chi nhánh A - Địa chỉ: Số 123, Đường ABC, Quận XYZ</p>\r\n                        </div>\r\n                        <div className=\"detail_info\">\r\n                            <FontAwesomeIcon className=\"icon_info\" icon={faHouse} />\r\n                            <p>Chi nhánh A - Địa chỉ: Số 123, Đường ABC, Quận XYZ</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* {visible ? (\r\n                <div className=\"info_status_cart\">\r\n                    <h3>{message}</h3>\r\n                </div>\r\n            ) : null} */}\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                theme=\"colored\"\r\n            />\r\n\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Product;\r\n","E:\\TTTN\\website_plant\\src\\pages\\pay\\Pay.js",["289","290","291","292","293","294","295","296","297","298","299","300"],[],"import Header from '~/components/header/Header';\r\nimport Footer from '~/components/footer/Footer';\r\nimport './pay.scss';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    fa1,\r\n    fa2,\r\n    fa3,\r\n    faCartShopping,\r\n    faCheck,\r\n    faChevronRight,\r\n    faCircle,\r\n    faMoneyBill1Wave,\r\n    faSpa,\r\n    faStar,\r\n    faTree,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { createApiOrder, deleteApiCart, readApiAccount, readApiCart } from '~/Api';\r\n\r\nfunction Pay({ isLoggedIn, username, id }) {\r\n    //tạo kết nối lấy thông tin khách hàng\r\n    const navigate = useNavigate();\r\n    const [clients, setClients] = useState([]);\r\n    useEffect(() => {\r\n        fetch(`${readApiAccount}?id_account=${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setClients(data);\r\n            });\r\n    }, [id]);\r\n\r\n    const [carts, setCarts] = useState([]);\r\n    const [totalMoney, setTotalMoney] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Tính tổng tiền khi carts thay đổi\r\n        const calculatedTotalMoney = carts.reduce((total, cart) => total + cart.price_product * cart.quantity, 0);\r\n        setTotalMoney(calculatedTotalMoney);\r\n    }, [carts]);\r\n    // tạo kết nối\r\n    useEffect(() => {\r\n        fetch(`${readApiCart}?id_owner=${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setCarts(data);\r\n            });\r\n    }, [carts.length]);\r\n\r\n    const filteredCarts = carts.filter((cart) => cart.id_owner === id);\r\n\r\n    function generateRandomCode() {\r\n        const randomOrder = Math.floor(Math.random() * 10000); // Tạo 4 chữ số ngẫu nhiên\r\n\r\n        const randomCode = `DH${randomOrder}${id}`;\r\n        return randomCode;\r\n    }\r\n\r\n    const getCurrentFormattedDate = () => {\r\n        const currentDate = new Date();\r\n        const day = currentDate.getDate();\r\n        const month = currentDate.getMonth() + 1;\r\n        const year = currentDate.getFullYear();\r\n        return `${year}/${month}/${day}`;\r\n    };\r\n\r\n    const handleSubmitOrders = (list_carts) => {\r\n        const createIdOrder = generateRandomCode();\r\n        const formattedDate = getCurrentFormattedDate();\r\n\r\n        list_carts.map((list_cart) => {\r\n            const formData2 = new FormData();\r\n            formData2.append('id_order', createIdOrder);\r\n            formData2.append('id_owner', list_cart.id_owner);\r\n            formData2.append('id_plant', list_cart.id_plant);\r\n            formData2.append('name_product', list_cart.name_product);\r\n            formData2.append('image_represent', list_cart.image_represent);\r\n            formData2.append('price_product', list_cart.price_product);\r\n            formData2.append('quantity', list_cart.quantity);\r\n            formData2.append('day_bought',formattedDate);\r\n            formData2.append('total_money', totalMoney);\r\n            formData2.append('status_order', 'Chờ duyệt');\r\n            fetch(createApiOrder, {\r\n                method: 'POST',\r\n                body: formData2,\r\n            })\r\n                .then((response) => {\r\n                    if (!response.ok) {\r\n                    }\r\n                })\r\n                .catch((error) => console.error(`Lỗi thêm đơn hàng`, error));\r\n        });\r\n        for (let i = 0; i < list_carts.length; i++) {\r\n            const formData = new FormData();\r\n            formData.append('id_cart', list_carts[i].id_cart);\r\n\r\n            fetch(deleteApiCart, {\r\n                method: 'POST',\r\n                body: formData,\r\n            })\r\n                .then((response) => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`Có lỗi xảy ra khi xóa sản phẩm thứ ${i + 1}.`);\r\n                    }\r\n                })\r\n                .catch((error) => console.error(`Error deleting product ${i + 1}:`, error));\r\n        }\r\n        \r\n        navigate('/info');\r\n    };\r\n\r\n    const [nameClient, setNameClient] = useState('');\r\n    const [phoneClient, setPhoneClient] = useState('');\r\n    const [emailClient, setEmailClient] = useState('');\r\n    const [addressClient, setAddressClient] = useState('');\r\n\r\n    return (\r\n        <>\r\n            {isLoggedIn ? (\r\n                <></>\r\n            ) : (\r\n                <>\r\n                    <Header isLoggedIn={isLoggedIn} username={username} />\r\n                </>\r\n            )}\r\n\r\n            <div className=\"section-first-title\">\r\n                <FontAwesomeIcon icon={faTree} />\r\n                <h3>Thông tin thanh toán</h3>\r\n                <FontAwesomeIcon icon={faTree} />\r\n                <div className=\"icon-mid\">\r\n                    <FontAwesomeIcon icon={faSpa} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"section_pay_money\">\r\n                <div class=\"top_infomation\">\r\n                    <div class=\"stages_of_cart\">\r\n                        <div class=\"stage_1_carts\">\r\n                            <FontAwesomeIcon className=\"phase\" icon={faCartShopping} />\r\n                            <p>Giỏ hàng của tôi</p>\r\n                            <div class=\"stage_1_carts_icon\">\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"stage_2_carts\">\r\n                            <FontAwesomeIcon className=\"phase\" icon={faMoneyBill1Wave} />\r\n                            <p>Thông tin thanh toán</p>\r\n                            <div class=\"stage_2_carts_icon\">\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"stage_3\">\r\n                            <FontAwesomeIcon className=\"phase\" icon={faCheck} />\r\n                            <p>Giỏ hàng của tôi</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"infomation_client_pay\">\r\n                    <form>\r\n                        <h3>Thông tin khách hàng</h3>\r\n                        {clients.map((client) =>\r\n                            client.username_account === username ? (\r\n                                <div>\r\n                                    <div class=\"form-group\">\r\n                                        <input\r\n                                            placeholder=\"Tên khách hàng\"\r\n                                            type=\"text\"\r\n                                            id=\"name\"\r\n                                            name=\"name\"\r\n                                            value={client.name_client}\r\n                                            autoFocus\r\n                                            onFocus={(e) => setNameClient(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <input\r\n                                            placeholder=\"SĐT\"\r\n                                            type=\"text\"\r\n                                            id=\"name\"\r\n                                            name=\"name\"\r\n                                            value={client.phone_client}\r\n                                            autoFocus\r\n                                            onFocus={(e) => setPhoneClient(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <input\r\n                                            placeholder=\"Email\"\r\n                                            type=\"text\"\r\n                                            id=\"name\"\r\n                                            name=\"name\"\r\n                                            value={client.email_client}\r\n                                            autoFocus\r\n                                            onFocus={(e) => setEmailClient(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <input\r\n                                            placeholder=\"Địa chỉ\"\r\n                                            type=\"text\"\r\n                                            id=\"address\"\r\n                                            name=\"address\"\r\n                                            autoFocus\r\n                                            value={client.address_client}\r\n                                            onFocus={(e) => setAddressClient(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            ) : null,\r\n                        )}\r\n\r\n                        <h3>Thông tin đơn hàng</h3>\r\n                        <table className=\"list_products\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Ảnh</th>\r\n                                    <th>Tên sản phẩm</th>\r\n                                    <th>Giá cả</th>\r\n                                    <th>Số lượng</th>\r\n                                    <th>Thành tiền</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {carts.map((cart) => (\r\n                                    <tr key={cart.id_cart}>\r\n                                        <td>\r\n                                            <img src={cart.image_represent} alt={cart.name_product} />\r\n                                        </td>\r\n                                        <td>{cart.name_product}</td>\r\n                                        <td>{cart.price_product}</td>\r\n                                        <td>{cart.quantity}</td>\r\n                                        <td className=\"total_money\">{cart.price_product * cart.quantity}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        <p>Tổng tiền: {totalMoney}</p>\r\n                        <button\r\n                            className=\"btn_buy_product\"\r\n                            type=\"submit\"\r\n                            onClick={() => handleSubmitOrders(filteredCarts)}\r\n                        >\r\n                            Xác nhận đặt hàng\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pay;\r\n","E:\\TTTN\\website_plant\\src\\pages\\login\\Login.js",["301","302","303","304","305","306"],[],"import { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { readApiAccount } from '~/Api';\r\nimport './login.scss';\r\nfunction Login({ onLogin }) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [idFlag, setIdFlag] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        fetch(readApiAccount)\r\n        .then(response => response.json())\r\n        .then(accounts => {\r\n            const account = accounts.find(acc => acc.username_account === username);\r\n            if (account && account.password_account === password && account.permission === 'USER') {\r\n                setIdFlag(account.id_account);\r\n                onLogin(username, account.id_account);\r\n                navigate('/');\r\n              } else if (account.password_account != password) {\r\n                alert('Thông tin đăng nhập không chính xác');\r\n            } else if (account.permission != 'USER'){\r\n                alert('Quyền hạn không không được phép đăng nhập');\r\n            }\r\n        })\r\n        .catch(error => console.error('Error fetching accounts:', error));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div class=\"box_login\">\r\n                <div className=\"form_login\">\r\n                    <img src=\"logo.jpg\"></img>\r\n                    <h2>Đăng nhập</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div class=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div class=\"inputBox\">\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btn-logins\" type=\"submit\">\r\n                            Đăng nhập\r\n                        </button>\r\n                    </form>\r\n                    <button className=\"btn-dangky\">\r\n                        <a href=\"/register\">Đăng ký</a>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","E:\\TTTN\\website_plant\\src\\pages\\register\\Register.js",["307","308","309","310","311","312"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { createApiAccount } from '~/Api';\r\nimport './register.scss';\r\n\r\nfunction Register() {\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name_client, setNameClient] = useState('');\r\n    const [address, setAddressClient] = useState('');\r\n    const [email, setEmailClient] = useState('');\r\n    const [phone, setPhoneClient] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const [carts, setCarts] = useState([]);\r\n\r\n    //tạo account\r\n    const handleCreateAccount = () => {\r\n        const formData2 = new FormData();\r\n        formData2.append('name_client', name_client);\r\n        formData2.append('email_client', email);\r\n        formData2.append('phone_client', phone);\r\n        formData2.append('address_client', address);\r\n        formData2.append('username_account', username);\r\n        formData2.append('password_account', password);\r\n        formData2.append('permission', 'USER');\r\n        fetch(`${createApiAccount}?permission=USER`, {\r\n            method: 'POST',\r\n            body: formData2,\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    alert('Đăng ký tài khoản thành công');\r\n                    setUsername('');\r\n                    setPassword('');\r\n                    navigate('/login');\r\n                } else {\r\n                    alert('Đăng ký tài khoản không thành công');\r\n                    throw new Error('Có lỗi xảy khi đăng ký.');\r\n                }\r\n            })\r\n            .catch((error) => console.error('Error deleting product:', error));\r\n    };\r\n\r\n    return (\r\n        <div className=\"box_register\">\r\n            <div className=\"form_register\">\r\n                <img src=\"logo.jpg\" alt=\"Logo\"></img>\r\n                <h2>Đăng ký tài khoản</h2>\r\n                <form className=\"form_mini\">\r\n                    <div className=\"info_user\">\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Nhập họ và tên:\"\r\n                                value={name_client}\r\n                                onChange={(e) => setNameClient(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"address\"\r\n                                name=\"address\"\r\n                                placeholder=\"Nhập địa chỉ:\"\r\n                                value={address}\r\n                                onChange={(e) => setAddressClient(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Nhập SĐT:\"\r\n                                value={phone}\r\n                                onChange={(e) => setPhoneClient(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Nhập email:\"\r\n                                value={email}\r\n                                onChange={(e) => setEmailClient(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"info_account\">\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                name=\"username\"\r\n                                placeholder=\"Nhập tên tài khoản\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"inputBox\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Nhập mật khẩu tài khoản\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <button className=\"btn_dangky_register\" type=\"submit\" onClick={handleCreateAccount}>\r\n                    Tạo tài khoản\r\n                </button>\r\n                <button className=\"btn_logins_register\">\r\n                    <a href=\"/login\">Đăng nhập</a>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","E:\\TTTN\\website_plant\\src\\pages\\introduce\\Introduce.js",["313","314","315","316","317"],[],"import React, { useState, useEffect } from 'react';\r\nimport './introduce.scss';\r\nimport Footer from '~/components/footer/Footer';\r\nconst Introduce = ({ isLoggedIn, username, id, onLogout }) => {\r\n    return (\r\n        <>\r\n            {/* <Header /> */}\r\n\r\n            <div className=\"container_introduce\">\r\n                <img className=\"image_background\" src=\"background_!.jpg\"></img>\r\n\r\n                <div className=\"section_introduce_first\">\r\n                    <h3>Chào mừng bạn đến với trang web \"Cây Cảnh\"!</h3>\r\n                    <p>\r\n                        Chúng tôi tự hào là địa chỉ đáng tin cậy cho những người yêu thích và đam mê cây cảnh tại Việt\r\n                        Nam. Trang web của chúng tôi mang đến cho bạn một thế giới đa dạng và phong phú về cây cảnh, từ\r\n                        những loại cây trang nhã và sang trọng cho đến các loại cây dễ chăm sóc, phù hợp với mọi không\r\n                        gian.\r\n                    </p>\r\n                    <img src=\"logo.jpg\"></img>\r\n                </div>\r\n                <div className=\"section_introduce_second\">\r\n                    <h3>Những sản phẩm mà vườn cây cảnh đang kinh doanh</h3>\r\n                    <p>\r\n                        Hiện tại, đa phần chúng tôi sẽ chuyên kinh doanh các loại cá cảnh hiện đang có trên thị trường\r\n                        TPHCM để đáp ứng nhu cầu của bất kỳ ai và luôn đảm bảo đẹp và đủ kiểu để mọi người lựa chọn.\r\n                        Đồng thời, không chỉ có cây cảnh thôi mà cây cảnh còn cung cấp các dòng sản phẩm để hỗ trợ người\r\n                        mua như: phân bón, tiểu cảnh cây, chậu cây. Tất cả những sản phẩm này đều được đảm bảo về chất\r\n                        lượng lẫn kiểu mẫu.\r\n                    </p>\r\n                    <img src=\"background.jpg\"></img>\r\n                </div>\r\n                <div className=\"section_introduce_third\">\r\n                    <h3>Mục tiêu phát triển của của vườn cây cảnh</h3>\r\n                    <p>\r\n                        Bất kỳ một cửa hàng, doanh nghiệp, hoặc tổ chức nào khi kinh doanh cũng đều có mục tiêu phát\r\n                        triển riêng của mình, và những mục tiêu mà chúng tôi hướng đến sẽ như sau: - Mục tiêu 1: Mang\r\n                        đến cho khách hàng những chậu cây đẹp, chất lượng nhất để đáp ứng niềm đam mê cũng như thú vui\r\n                        để làm đẹp cho căn hộ của khách hàng. Đi kèm với đó là chất lượng sản phẩm, dịch vụ hiện đang\r\n                        được triển khai luôn đảm bảo một cách trọn vẹn nhất. - Mục tiêu 2: Ngày càng hoàn thiện hơn về\r\n                        khâu hỗ trợ và xử lý những đơn hàng được đặt Online tại Website và sẽ tối giản hóa các thao tác\r\n                        từ tiếp nhận và gửi cây cảnh hoặc các sản phẩm đang kinh doanh của Hệ thống cửa hàng cung cấp\r\n                        cây. - Mục tiêu 3: Trở thành một trong những cửa hàng chuyên cung cấp cá cảnh,tại Tân Bình, Quận\r\n                        12 và toàn TPHCM. Là nơi có chất lượng hồ cá cảnh, thi công bể cá hải sản đảm bảo chất lượng\r\n                        nhất TPHCM.\r\n                    </p>\r\n                    <h3>Một số dịch vụ đi kèm tại vườn cây cảnh Sài Gòn</h3>\r\n                    <p>\r\n                        Trong quá trình hoạt động thì chúng tôi cũng đã mở rộng sang các hình thức dịch vụ đa dạng để hỗ\r\n                        trợ khách hàng như sau: + Thi công thiết kế vườn nhà + cây cảnh treo nhà các loại + Cây cảnh\r\n                        công trình Tất cả những dịch vụ này đang được vườn cây Cảnh Sài Gòn ( TPHCM ) mở rộng nhằm đáp\r\n                        ứng nhu cầu của người sử dụng. Trong suốt quá trình triển khai thì cũng đã nhận được rất nhiều\r\n                        những phản hồi tích cực. Đây là một trong những niềm vui của chúng tôi trong thời gian hoạt động\r\n                        tính đến thời điểm hiện tại.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Introduce;\r\n","E:\\TTTN\\website_plant\\src\\pages\\info\\Info.js",["318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337"],[],"import Header from '~/components/header/Header';\r\nimport Footer from '~/components/footer/Footer';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './info.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    fa1,\r\n    fa2,\r\n    fa3,\r\n    faCartShopping,\r\n    faCheck,\r\n    faChevronRight,\r\n    faCircle,\r\n    faMoneyBill1Wave,\r\n    faSpa,\r\n    faStar,\r\n    faTree,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { deleteApiOrder, readApiAccount, readApiOrder, updateApiAccount } from '~/Api';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Info({ isLoggedIn, username, id }) {\r\n    const [clients, setClients] = useState([]);\r\n    useEffect(() => {\r\n        fetch(`${readApiAccount}?id_account=${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setClients(data);\r\n            });\r\n    }, [id]);\r\n\r\n    const [orders, setOrders] = useState([]);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        fetch(`${readApiOrder}?id_owner=${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setOrders(data);\r\n                console.log(data);\r\n            });\r\n    }, [orders]);\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\r\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n    const handleClickDeleteOrder = (order_id) => {\r\n        fetch(readApiOrder)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const existingOrder = data.find((item) => item.id_order === order_id);\r\n\r\n                if (existingOrder) {\r\n                    if (existingOrder.status_order === 'Chờ duyệt') {\r\n                        const formData2 = new FormData();\r\n                        formData2.append('id_order', order_id);\r\n                        console.log(order_id);\r\n                        fetch(deleteApiOrder, {\r\n                            method: 'POST',\r\n                            body: formData2,\r\n                        })\r\n                            .then((response) => {\r\n                                if (response.ok) {\r\n                                } else {\r\n                                    throw new Error('Có lỗi xảy ra khi xóa sản phẩm.');\r\n                                }\r\n                            })\r\n                            .catch((error) => console.error('Error deleting product:', error));\r\n\r\n                        toast.success('Xóa đơn hàng thành công!');\r\n                    } else {\r\n                        toast.warning('Đơn đã duyệt không thể hủy!');\r\n                    }\r\n                } else {\r\n                    console.log('Không tìm thấy đơn hàng cần xóa');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Lỗi khi truy vấn API:', error);\r\n            });\r\n    };\r\n\r\n    const [usernames, setUsernames] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(`${readApiAccount}?id_account=${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setClients(data);\r\n                const extractedUsernames = data.map((client) => client.username_account);\r\n                setUsernames(extractedUsernames);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    }, [id]);\r\n    const [password, setPassword] = useState('');\r\n    const [name_client, setNameClient] = useState('');\r\n    const [address, setAddressClient] = useState('');\r\n    const [email, setEmailClient] = useState('');\r\n    const [phone, setPhoneClient] = useState('');\r\n\r\n    const handleUpdateAccount = () => {\r\n        const formData2 = new FormData();\r\n        formData2.append('name_client', name_client);\r\n        formData2.append('email_client', email);\r\n        formData2.append('phone_client', phone);\r\n        formData2.append('address_client', address);\r\n        formData2.append('username_account', usernames);\r\n        formData2.append('password_account', password);\r\n        // console.log(usernames);\r\n        fetch(updateApiAccount, {\r\n            method: 'POST',\r\n            body: formData2,\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                } else {\r\n                    throw new Error('Có lỗi xảy ra khi cập nhật thông khách hàng.');\r\n                }\r\n            })\r\n            .catch((error) => console.error('Error deleting product:', error));\r\n    };\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    return (\r\n        <>\r\n            {isLoggedIn ? (\r\n                <></>\r\n            ) : (\r\n                <>\r\n                    <Header isLoggedIn={isLoggedIn} username={username} />\r\n                </>\r\n            )}\r\n\r\n            <div className=\"section_info_client\">\r\n                <img src=\"Anh_Dao.jpg\"></img>\r\n                <div className=\"content_info\">\r\n                    <h3 className=\"title_info\">Thông tin khách hàng</h3>\r\n                    {clients.map((client) =>\r\n                        client.username_account === username ? (\r\n                            <>\r\n                                <form>\r\n                                    <div className=\"info_detail\">\r\n                                        <h3>Tên khách hàng:</h3>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name_client\"\r\n                                            placeholder={client.name_client}\r\n                                            onChange={(e) => setNameClient(e.target.value)}\r\n                                            readOnly={!editing}\r\n                                            required\r\n                                            \r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"info_detail\">\r\n                                        <h3>Địa chỉ:</h3>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"address_client\"\r\n                                            placeholder={client.address_client}\r\n                                            onChange={(e) => setAddressClient(e.target.value)}\r\n                                            readOnly={!editing}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"info_detail\">\r\n                                        <h3>Số điện thoại:</h3>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"phone_client\"\r\n                                            placeholder={client.phone_client}\r\n                                            onChange={(e) => setPhoneClient(e.target.value)}\r\n                                            readOnly={!editing}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"info_detail\">\r\n                                        <h3>Email:</h3>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"email_client\"\r\n                                            placeholder={client.email_client}\r\n                                            onChange={(e) => setEmailClient(e.target.value)}\r\n                                            readOnly={!editing}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"info_detail\">\r\n                                        <h3>Tài khoản:</h3>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"username_client\"\r\n                                            placeholder={client.username_account}\r\n                                            onChange={(e) => setUsernames(e.target.value)}\r\n                                            readOnly={!editing || editing}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"info_detail\">\r\n                                        <h3>Password:</h3>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            name=\"password_account\"\r\n                                            placeholder={client.password_account}\r\n                                            onChange={(e) => setPassword(e.target.value)}\r\n                                            readOnly={!editing}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        className=\"btn_update_info_client\"\r\n                                        type=\"button\"\r\n                                        onClick={() => setEditing(true)}\r\n                                    >\r\n                                        Chỉnh sửa thông tin\r\n                                    </button>\r\n                                    {editing && (\r\n                                        <button\r\n                                            className=\"btn_update_info_client\"\r\n                                            type=\"submit\"\r\n                                            onClick={handleUpdateAccount}\r\n                                        >\r\n                                            Lưu thông tin\r\n                                        </button>\r\n                                    )}\r\n                                </form>\r\n                            </>\r\n                        ) : null,\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {orders.length === 0 ? (\r\n                <div className=\"no_order\">\r\n                    <p className=\"notify_no_order\">Hiện không có đơn hàng nào.</p>\r\n                    <a className=\"back_home\" href=\"/\">\r\n                        Quay về mua hàng\r\n                    </a>\r\n                </div>\r\n            ) : (\r\n                orders.map((order, index) => (\r\n                    <div key={order.id_order} className=\"section_info_order\">\r\n                        <div className=\"info_order_left\">\r\n                            {index === 0 || orders[index - 1].id_order !== order.id_order ? (\r\n                                <>\r\n                                    <h3>{order.id_order}</h3>\r\n                                    <div className=\"status\">\r\n                                        <p>Ngày lập đơn: {order.day_bought}</p>\r\n                                        <button className=\"btn_status\">{order.status_order}</button>\r\n                                        <button\r\n                                            className=\"btn_delete\"\r\n                                            onClick={() => handleClickDeleteOrder(order.id_order)}\r\n                                        >\r\n                                            Hủy đơn\r\n                                        </button>\r\n                                    </div>\r\n                                    <p className=\"total_money_order\">{order.total_money} VND</p>\r\n                                </>\r\n                            ) : null}\r\n                        </div>\r\n                        <div className=\"info_order_right\">\r\n                            {index === 0 || orders[index - 1].id_order !== order.id_order ? (\r\n                                <>\r\n                                    <h3 className=\"info_introduce\">Chi tiết sản phẩm đơn hàng</h3>\r\n                                    <table className=\"list_products\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Ảnh sản phẩm</th>\r\n                                                <th>Tên sản phẩm</th>\r\n                                                <th>Giá sản phẩm</th>\r\n                                                <th>Số lượng</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {orders\r\n                                                .filter((orderItem) => order.id_order === orderItem.id_order)\r\n                                                .reduce((uniqueProducts, filteredOrder) => {\r\n                                                    if (\r\n                                                        !uniqueProducts.some(\r\n                                                            (product) =>\r\n                                                                product.name_product === filteredOrder.name_product,\r\n                                                        )\r\n                                                    ) {\r\n                                                        uniqueProducts.push(filteredOrder);\r\n                                                    }\r\n                                                    return uniqueProducts;\r\n                                                }, [])\r\n                                                .map((uniqueProduct) => (\r\n                                                    <tr key={uniqueProduct.id_order}>\r\n                                                        <td>\r\n                                                            <img src={uniqueProduct.image_represent} alt=\"Product\" />\r\n                                                        </td>\r\n                                                        <td>{uniqueProduct.name_product}</td>\r\n                                                        <td>{uniqueProduct.price_bought}</td>\r\n                                                        <td>{uniqueProduct.quantity}</td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </>\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n            {/* {showErrorMessage && <p className=\"info_reason\">Đơn hàng đã duyệt không hủy được</p>} */}\r\n            {/* {showSuccessMessage && <p className=\"info_reason\">Hủy đơn thành công</p>} */}\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                theme=\"colored\"\r\n            />\r\n\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Info;\r\n","E:\\TTTN\\website_plant\\src\\pages\\contact\\Contact.js",["338","339"],[],"import React, { useState, useEffect } from 'react';\r\n// import './introduce.scss';\r\nimport Footer from '~/components/footer/Footer';\r\nimport Map from '~/components/map/Map';\r\nconst Contact = ({ isLoggedIn, username, id, onLogout }) => {\r\n    return (\r\n        <>\r\n            \r\n            <Map />\r\n            \r\n\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","E:\\TTTN\\website_plant\\src\\pages\\policy\\Policy.js",[],[],"E:\\TTTN\\website_plant\\src\\data-plants.js",[],[],"E:\\TTTN\\website_plant\\src\\components\\map\\Map.js",["340"],[],"import React from 'react';\r\nimport './map.scss';\r\n\r\nfunction Map() {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"map_container\">\r\n                    <div className=\"map-responsive\">\r\n                    <iframe className=\"map_shop\"\r\n                    src={`https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d9901.401020407884!2d106.61601079799645!3d11.255692915434704!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3174ca09ec0a66ed%3A0xdae46b5d6a5f45c8!2zQsOgdSBCw6BuZywgQsOsbmggRMawxqFuZywgVmnhu4d0IE5hbQ!5e1!3m2!1svi!2s!4v1690451867712!5m2!1svi!2s`}></iframe>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"info_contact\">\r\n                    <h2>Thông tin liên hệ cửa hàng</h2>\r\n                    <div className=\"contact-info\">\r\n                        <div className=\"info-item\">\r\n                            <h3>Địa chỉ cửa hàng:</h3>\r\n                            <p>Đường Tô Ký, Phường Tân Chánh Hiệp, Quận 12, TP Hồ Chí Minh</p>\r\n                        </div>\r\n                        <div className=\"info-item\">\r\n                            <h3>Số điện thoại:</h3>\r\n                            <p>(+84) 332 212 903</p>\r\n                        </div>\r\n                        <div className=\"info-item\">\r\n                            <h3>Email:</h3>\r\n                            <p>2051120229@.ut.edu.vn</p>\r\n                        </div>\r\n                        <div className=\"info-item\">\r\n                            <h3>Giờ mở cửa:</h3>\r\n                            <p>Từ Thứ 2 đến Thứ 6: 8:00 AM - 6:00 PM</p>\r\n                            <p>Thứ 7 và Chủ Nhật: 9:00 AM - 4:00 PM</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n",{"ruleId":"341","severity":1,"message":"342","line":4,"column":10,"nodeType":"343","messageId":"344","endLine":4,"endColumn":14},{"ruleId":"341","severity":1,"message":"345","line":7,"column":5,"nodeType":"343","messageId":"344","endLine":7,"endColumn":18},{"ruleId":"341","severity":1,"message":"346","line":9,"column":5,"nodeType":"343","messageId":"344","endLine":9,"endColumn":11},{"ruleId":"341","severity":1,"message":"347","line":10,"column":5,"nodeType":"343","messageId":"344","endLine":10,"endColumn":22},{"ruleId":"341","severity":1,"message":"348","line":12,"column":5,"nodeType":"343","messageId":"344","endLine":12,"endColumn":14},{"ruleId":"341","severity":1,"message":"349","line":29,"column":11,"nodeType":"343","messageId":"344","endLine":29,"endColumn":24},{"ruleId":"341","severity":1,"message":"350","line":31,"column":11,"nodeType":"343","messageId":"344","endLine":31,"endColumn":18},{"ruleId":"341","severity":1,"message":"351","line":1,"column":20,"nodeType":"343","messageId":"344","endLine":1,"endColumn":29},{"ruleId":"341","severity":1,"message":"342","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":14},{"ruleId":"341","severity":1,"message":"352","line":7,"column":12,"nodeType":"343","messageId":"344","endLine":7,"endColumn":18},{"ruleId":"353","severity":1,"message":"354","line":33,"column":21,"nodeType":"355","endLine":33,"endColumn":41},{"ruleId":"341","severity":1,"message":"345","line":5,"column":10,"nodeType":"343","messageId":"344","endLine":5,"endColumn":23},{"ruleId":"341","severity":1,"message":"348","line":5,"column":44,"nodeType":"343","messageId":"344","endLine":5,"endColumn":53},{"ruleId":"341","severity":1,"message":"356","line":6,"column":10,"nodeType":"343","messageId":"344","endLine":6,"endColumn":21},{"ruleId":"357","severity":1,"message":"358","line":22,"column":8,"nodeType":"359","endLine":22,"endColumn":22,"suggestions":"360"},{"ruleId":"341","severity":1,"message":"361","line":29,"column":19,"nodeType":"343","messageId":"344","endLine":29,"endColumn":27},{"ruleId":"341","severity":1,"message":"362","line":57,"column":12,"nodeType":"343","messageId":"344","endLine":57,"endColumn":21},{"ruleId":"357","severity":1,"message":"363","line":65,"column":8,"nodeType":"359","endLine":65,"endColumn":10,"suggestions":"364"},{"ruleId":"357","severity":1,"message":"365","line":84,"column":8,"nodeType":"359","endLine":84,"endColumn":20,"suggestions":"366"},{"ruleId":"353","severity":1,"message":"354","line":123,"column":69,"nodeType":"355","endLine":126,"endColumn":70},{"ruleId":"353","severity":1,"message":"354","line":173,"column":41,"nodeType":"355","endLine":176,"endColumn":42},{"ruleId":"341","severity":1,"message":"351","line":1,"column":27,"nodeType":"343","messageId":"344","endLine":1,"endColumn":36},{"ruleId":"341","severity":1,"message":"342","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":14},{"ruleId":"341","severity":1,"message":"367","line":15,"column":12,"nodeType":"343","messageId":"344","endLine":15,"endColumn":17},{"ruleId":"341","severity":1,"message":"368","line":15,"column":19,"nodeType":"343","messageId":"344","endLine":15,"endColumn":27},{"ruleId":"341","severity":1,"message":"369","line":13,"column":5,"nodeType":"343","messageId":"344","endLine":13,"endColumn":13},{"ruleId":"341","severity":1,"message":"370","line":16,"column":5,"nodeType":"343","messageId":"344","endLine":16,"endColumn":11},{"ruleId":"341","severity":1,"message":"356","line":19,"column":10,"nodeType":"343","messageId":"344","endLine":19,"endColumn":21},{"ruleId":"341","severity":1,"message":"371","line":25,"column":11,"nodeType":"343","messageId":"344","endLine":25,"endColumn":20},{"ruleId":"357","severity":1,"message":"372","line":43,"column":8,"nodeType":"359","endLine":43,"endColumn":22,"suggestions":"373"},{"ruleId":"357","severity":1,"message":"374","line":48,"column":8,"nodeType":"359","endLine":48,"endColumn":20,"suggestions":"375"},{"ruleId":"353","severity":1,"message":"354","line":244,"column":45,"nodeType":"355","endLine":244,"endColumn":79},{"ruleId":"341","severity":1,"message":"342","line":5,"column":10,"nodeType":"343","messageId":"344","endLine":5,"endColumn":14},{"ruleId":"341","severity":1,"message":"369","line":13,"column":5,"nodeType":"343","messageId":"344","endLine":13,"endColumn":13},{"ruleId":"341","severity":1,"message":"370","line":16,"column":5,"nodeType":"343","messageId":"344","endLine":16,"endColumn":11},{"ruleId":"357","severity":1,"message":"376","line":33,"column":8,"nodeType":"359","endLine":33,"endColumn":12,"suggestions":"377"},{"ruleId":"357","severity":1,"message":"378","line":44,"column":8,"nodeType":"359","endLine":44,"endColumn":23,"suggestions":"379"},{"ruleId":"341","severity":1,"message":"380","line":1,"column":17,"nodeType":"343","messageId":"344","endLine":1,"endColumn":25},{"ruleId":"341","severity":1,"message":"351","line":1,"column":27,"nodeType":"343","messageId":"344","endLine":1,"endColumn":36},{"ruleId":"353","severity":1,"message":"354","line":10,"column":17,"nodeType":"355","endLine":10,"endColumn":74},{"ruleId":"353","severity":1,"message":"354","line":20,"column":21,"nodeType":"355","endLine":20,"endColumn":41},{"ruleId":"353","severity":1,"message":"354","line":31,"column":21,"nodeType":"355","endLine":31,"endColumn":47},{"ruleId":"381","severity":1,"message":"382","line":10,"column":21,"nodeType":"355","endLine":11,"endColumn":330},{"ruleId":"341","severity":1,"message":"370","line":6,"column":52,"nodeType":"343","messageId":"344","endLine":6,"endColumn":58},{"ruleId":"357","severity":1,"message":"363","line":27,"column":8,"nodeType":"359","endLine":27,"endColumn":10,"suggestions":"383"},{"ruleId":"384","severity":1,"message":"385","line":191,"column":37,"nodeType":"355","endLine":196,"endColumn":38},{"ruleId":"353","severity":1,"message":"354","line":198,"column":41,"nodeType":"355","endLine":202,"endColumn":42},{"ruleId":"353","severity":1,"message":"354","line":203,"column":41,"nodeType":"355","endLine":207,"endColumn":42},{"ruleId":"353","severity":1,"message":"354","line":208,"column":41,"nodeType":"355","endLine":212,"endColumn":42},{"ruleId":"353","severity":1,"message":"354","line":213,"column":41,"nodeType":"355","endLine":217,"endColumn":42},{"ruleId":"341","severity":1,"message":"380","line":1,"column":17,"nodeType":"343","messageId":"344","endLine":1,"endColumn":25},{"ruleId":"341","severity":1,"message":"351","line":1,"column":27,"nodeType":"343","messageId":"344","endLine":1,"endColumn":36},{"ruleId":"341","severity":1,"message":"367","line":54,"column":12,"nodeType":"343","messageId":"344","endLine":54,"endColumn":17},{"ruleId":"341","severity":1,"message":"345","line":5,"column":10,"nodeType":"343","messageId":"344","endLine":5,"endColumn":23},{"ruleId":"341","severity":1,"message":"348","line":5,"column":44,"nodeType":"343","messageId":"344","endLine":5,"endColumn":53},{"ruleId":"341","severity":1,"message":"356","line":6,"column":10,"nodeType":"343","messageId":"344","endLine":6,"endColumn":21},{"ruleId":"357","severity":1,"message":"358","line":22,"column":8,"nodeType":"359","endLine":22,"endColumn":22,"suggestions":"386"},{"ruleId":"357","severity":1,"message":"358","line":30,"column":8,"nodeType":"359","endLine":30,"endColumn":22,"suggestions":"387"},{"ruleId":"341","severity":1,"message":"361","line":37,"column":19,"nodeType":"343","messageId":"344","endLine":37,"endColumn":27},{"ruleId":"357","severity":1,"message":"365","line":97,"column":8,"nodeType":"359","endLine":97,"endColumn":20,"suggestions":"388"},{"ruleId":"353","severity":1,"message":"354","line":136,"column":69,"nodeType":"355","endLine":139,"endColumn":70},{"ruleId":"353","severity":1,"message":"354","line":186,"column":41,"nodeType":"355","endLine":189,"endColumn":42},{"ruleId":"353","severity":1,"message":"354","line":12,"column":33,"nodeType":"355","endLine":12,"endColumn":93},{"ruleId":"389","severity":1,"message":"390","line":13,"column":33,"nodeType":"355","endLine":13,"endColumn":65},{"ruleId":"389","severity":1,"message":"390","line":16,"column":33,"nodeType":"355","endLine":16,"endColumn":65},{"ruleId":"389","severity":1,"message":"390","line":19,"column":33,"nodeType":"355","endLine":19,"endColumn":65},{"ruleId":"341","severity":1,"message":"345","line":7,"column":5,"nodeType":"343","messageId":"344","endLine":7,"endColumn":18},{"ruleId":"341","severity":1,"message":"346","line":9,"column":5,"nodeType":"343","messageId":"344","endLine":9,"endColumn":11},{"ruleId":"341","severity":1,"message":"347","line":10,"column":5,"nodeType":"343","messageId":"344","endLine":10,"endColumn":22},{"ruleId":"341","severity":1,"message":"348","line":12,"column":5,"nodeType":"343","messageId":"344","endLine":12,"endColumn":14},{"ruleId":"341","severity":1,"message":"391","line":23,"column":11,"nodeType":"343","messageId":"344","endLine":23,"endColumn":19},{"ruleId":"341","severity":1,"message":"350","line":51,"column":11,"nodeType":"343","messageId":"344","endLine":51,"endColumn":18},{"ruleId":"341","severity":1,"message":"392","line":233,"column":12,"nodeType":"343","messageId":"344","endLine":233,"endColumn":19},{"ruleId":"341","severity":1,"message":"393","line":234,"column":21,"nodeType":"343","messageId":"344","endLine":234,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":307,"column":72,"nodeType":"396","messageId":"397","endLine":307,"endColumn":74},{"ruleId":"394","severity":1,"message":"395","line":345,"column":72,"nodeType":"396","messageId":"397","endLine":345,"endColumn":74},{"ruleId":"394","severity":1,"message":"395","line":383,"column":72,"nodeType":"396","messageId":"397","endLine":383,"endColumn":74},{"ruleId":"394","severity":1,"message":"395","line":421,"column":72,"nodeType":"396","messageId":"397","endLine":421,"endColumn":74},{"ruleId":"341","severity":1,"message":"398","line":8,"column":5,"nodeType":"343","messageId":"344","endLine":8,"endColumn":8},{"ruleId":"341","severity":1,"message":"399","line":9,"column":5,"nodeType":"343","messageId":"344","endLine":9,"endColumn":8},{"ruleId":"341","severity":1,"message":"400","line":10,"column":5,"nodeType":"343","messageId":"344","endLine":10,"endColumn":8},{"ruleId":"341","severity":1,"message":"369","line":14,"column":5,"nodeType":"343","messageId":"344","endLine":14,"endColumn":13},{"ruleId":"341","severity":1,"message":"370","line":17,"column":5,"nodeType":"343","messageId":"344","endLine":17,"endColumn":11},{"ruleId":"341","severity":1,"message":"356","line":20,"column":10,"nodeType":"343","messageId":"344","endLine":20,"endColumn":21},{"ruleId":"357","severity":1,"message":"358","line":41,"column":8,"nodeType":"359","endLine":41,"endColumn":20,"suggestions":"401"},{"ruleId":"357","severity":1,"message":"374","line":46,"column":8,"nodeType":"359","endLine":46,"endColumn":20,"suggestions":"402"},{"ruleId":"353","severity":1,"message":"354","line":190,"column":45,"nodeType":"355","endLine":190,"endColumn":79},{"ruleId":"357","severity":1,"message":"358","line":31,"column":8,"nodeType":"359","endLine":31,"endColumn":10,"suggestions":"403"},{"ruleId":"341","severity":1,"message":"404","line":34,"column":12,"nodeType":"343","messageId":"344","endLine":34,"endColumn":23},{"ruleId":"357","severity":1,"message":"358","line":162,"column":8,"nodeType":"359","endLine":162,"endColumn":23,"suggestions":"405"},{"ruleId":"357","severity":1,"message":"358","line":185,"column":8,"nodeType":"359","endLine":185,"endColumn":23,"suggestions":"406"},{"ruleId":"384","severity":1,"message":"385","line":212,"column":37,"nodeType":"355","endLine":217,"endColumn":38},{"ruleId":"353","severity":1,"message":"354","line":219,"column":41,"nodeType":"355","endLine":223,"endColumn":42},{"ruleId":"353","severity":1,"message":"354","line":224,"column":41,"nodeType":"355","endLine":228,"endColumn":42},{"ruleId":"353","severity":1,"message":"354","line":229,"column":41,"nodeType":"355","endLine":233,"endColumn":42},{"ruleId":"353","severity":1,"message":"354","line":234,"column":41,"nodeType":"355","endLine":238,"endColumn":42},{"ruleId":"353","severity":1,"message":"354","line":340,"column":55,"nodeType":"355","endLine":340,"endColumn":157},{"ruleId":"341","severity":1,"message":"342","line":5,"column":10,"nodeType":"343","messageId":"344","endLine":5,"endColumn":14},{"ruleId":"341","severity":1,"message":"398","line":8,"column":5,"nodeType":"343","messageId":"344","endLine":8,"endColumn":8},{"ruleId":"341","severity":1,"message":"399","line":9,"column":5,"nodeType":"343","messageId":"344","endLine":9,"endColumn":8},{"ruleId":"341","severity":1,"message":"400","line":10,"column":5,"nodeType":"343","messageId":"344","endLine":10,"endColumn":8},{"ruleId":"341","severity":1,"message":"369","line":14,"column":5,"nodeType":"343","messageId":"344","endLine":14,"endColumn":13},{"ruleId":"341","severity":1,"message":"370","line":17,"column":5,"nodeType":"343","messageId":"344","endLine":17,"endColumn":11},{"ruleId":"357","severity":1,"message":"358","line":49,"column":8,"nodeType":"359","endLine":49,"endColumn":22,"suggestions":"407"},{"ruleId":"408","severity":1,"message":"409","line":72,"column":36,"nodeType":"410","messageId":"411","endLine":72,"endColumn":38},{"ruleId":"341","severity":1,"message":"412","line":113,"column":12,"nodeType":"343","messageId":"344","endLine":113,"endColumn":22},{"ruleId":"341","severity":1,"message":"413","line":114,"column":12,"nodeType":"343","messageId":"344","endLine":114,"endColumn":23},{"ruleId":"341","severity":1,"message":"414","line":115,"column":12,"nodeType":"343","messageId":"344","endLine":115,"endColumn":23},{"ruleId":"341","severity":1,"message":"415","line":116,"column":12,"nodeType":"343","messageId":"344","endLine":116,"endColumn":25},{"ruleId":"341","severity":1,"message":"351","line":1,"column":20,"nodeType":"343","messageId":"344","endLine":1,"endColumn":29},{"ruleId":"341","severity":1,"message":"342","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":14},{"ruleId":"341","severity":1,"message":"352","line":8,"column":12,"nodeType":"343","messageId":"344","endLine":8,"endColumn":18},{"ruleId":"394","severity":1,"message":"416","line":22,"column":51,"nodeType":"396","messageId":"397","endLine":22,"endColumn":53},{"ruleId":"394","severity":1,"message":"416","line":24,"column":43,"nodeType":"396","messageId":"397","endLine":24,"endColumn":45},{"ruleId":"353","severity":1,"message":"354","line":35,"column":21,"nodeType":"355","endLine":35,"endColumn":41},{"ruleId":"341","severity":1,"message":"351","line":1,"column":27,"nodeType":"343","messageId":"344","endLine":1,"endColumn":36},{"ruleId":"341","severity":1,"message":"342","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":14},{"ruleId":"341","severity":1,"message":"417","line":7,"column":12,"nodeType":"343","messageId":"344","endLine":7,"endColumn":20},{"ruleId":"341","severity":1,"message":"418","line":7,"column":22,"nodeType":"343","messageId":"344","endLine":7,"endColumn":33},{"ruleId":"341","severity":1,"message":"367","line":16,"column":12,"nodeType":"343","messageId":"344","endLine":16,"endColumn":17},{"ruleId":"341","severity":1,"message":"368","line":16,"column":19,"nodeType":"343","messageId":"344","endLine":16,"endColumn":27},{"ruleId":"341","severity":1,"message":"380","line":1,"column":17,"nodeType":"343","messageId":"344","endLine":1,"endColumn":25},{"ruleId":"341","severity":1,"message":"351","line":1,"column":27,"nodeType":"343","messageId":"344","endLine":1,"endColumn":36},{"ruleId":"353","severity":1,"message":"354","line":10,"column":17,"nodeType":"355","endLine":10,"endColumn":74},{"ruleId":"353","severity":1,"message":"354","line":20,"column":21,"nodeType":"355","endLine":20,"endColumn":41},{"ruleId":"353","severity":1,"message":"354","line":31,"column":21,"nodeType":"355","endLine":31,"endColumn":47},{"ruleId":"341","severity":1,"message":"419","line":6,"column":10,"nodeType":"343","messageId":"344","endLine":6,"endColumn":25},{"ruleId":"341","severity":1,"message":"398","line":8,"column":5,"nodeType":"343","messageId":"344","endLine":8,"endColumn":8},{"ruleId":"341","severity":1,"message":"399","line":9,"column":5,"nodeType":"343","messageId":"344","endLine":9,"endColumn":8},{"ruleId":"341","severity":1,"message":"400","line":10,"column":5,"nodeType":"343","messageId":"344","endLine":10,"endColumn":8},{"ruleId":"341","severity":1,"message":"420","line":11,"column":5,"nodeType":"343","messageId":"344","endLine":11,"endColumn":19},{"ruleId":"341","severity":1,"message":"421","line":12,"column":5,"nodeType":"343","messageId":"344","endLine":12,"endColumn":12},{"ruleId":"341","severity":1,"message":"422","line":13,"column":5,"nodeType":"343","messageId":"344","endLine":13,"endColumn":19},{"ruleId":"341","severity":1,"message":"369","line":14,"column":5,"nodeType":"343","messageId":"344","endLine":14,"endColumn":13},{"ruleId":"341","severity":1,"message":"423","line":15,"column":5,"nodeType":"343","messageId":"344","endLine":15,"endColumn":21},{"ruleId":"341","severity":1,"message":"424","line":16,"column":5,"nodeType":"343","messageId":"344","endLine":16,"endColumn":10},{"ruleId":"341","severity":1,"message":"370","line":17,"column":5,"nodeType":"343","messageId":"344","endLine":17,"endColumn":11},{"ruleId":"341","severity":1,"message":"425","line":18,"column":5,"nodeType":"343","messageId":"344","endLine":18,"endColumn":11},{"ruleId":"341","severity":1,"message":"356","line":20,"column":10,"nodeType":"343","messageId":"344","endLine":20,"endColumn":21},{"ruleId":"341","severity":1,"message":"391","line":37,"column":11,"nodeType":"343","messageId":"344","endLine":37,"endColumn":19},{"ruleId":"357","severity":1,"message":"358","line":45,"column":8,"nodeType":"359","endLine":45,"endColumn":16,"suggestions":"426"},{"ruleId":"341","severity":1,"message":"427","line":46,"column":12,"nodeType":"343","messageId":"344","endLine":46,"endColumn":28},{"ruleId":"341","severity":1,"message":"428","line":46,"column":30,"nodeType":"343","messageId":"344","endLine":46,"endColumn":49},{"ruleId":"341","severity":1,"message":"429","line":47,"column":12,"nodeType":"343","messageId":"344","endLine":47,"endColumn":30},{"ruleId":"341","severity":1,"message":"430","line":47,"column":32,"nodeType":"343","messageId":"344","endLine":47,"endColumn":53},{"ruleId":"353","severity":1,"message":"354","line":138,"column":17,"nodeType":"355","endLine":138,"endColumn":40},{"ruleId":"341","severity":1,"message":"380","line":1,"column":17,"nodeType":"343","messageId":"344","endLine":1,"endColumn":25},{"ruleId":"341","severity":1,"message":"351","line":1,"column":27,"nodeType":"343","messageId":"344","endLine":1,"endColumn":36},{"ruleId":"381","severity":1,"message":"382","line":10,"column":21,"nodeType":"355","endLine":11,"endColumn":330},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'faCircleXmark' is defined but never used.","'faLeaf' is defined but never used.","'faMagnifyingGlass' is defined but never used.","'faSpinner' is defined but never used.","'limitedPlants' is assigned a value but never used.","'comment' is assigned a value but never used.","'useEffect' is defined but never used.","'idFlag' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["431"],"'setMenus' is assigned a value but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'plantsAPI'. Either include it or remove the dependency array.",["432"],"React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["433"],"'carts' is assigned a value but never used.","'setCarts' is assigned a value but never used.","'faCircle' is defined but never used.","'faStar' is defined but never used.","'cartssAPI' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cartsAPI'. Either include it or remove the dependency array.",["434"],"React Hook useEffect has a missing dependency: 'updateTotalMoney'. Either include it or remove the dependency array.",["435"],"React Hook useEffect has a missing dependency: 'clientAPI'. Either include it or remove the dependency array.",["436"],"React Hook useEffect has a missing dependency: 'orderAPI'. Either include it or remove the dependency array.",["437"],"'useState' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["438"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["439"],["440"],["441"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'navigate' is assigned a value but never used.","'visible' is assigned a value but never used.","'setMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fa1' is defined but never used.","'fa2' is defined but never used.","'fa3' is defined but never used.",["442"],["443"],["444"],"'list_plants' is assigned a value but never used.",["445"],["446"],["447"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'nameClient' is assigned a value but never used.","'phoneClient' is assigned a value but never used.","'emailClient' is assigned a value but never used.","'addressClient' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'accounts' is assigned a value but never used.","'setAccounts' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'faCartShopping' is defined but never used.","'faCheck' is defined but never used.","'faChevronRight' is defined but never used.","'faMoneyBill1Wave' is defined but never used.","'faSpa' is defined but never used.","'faTree' is defined but never used.",["448"],"'showErrorMessage' is assigned a value but never used.","'setShowErrorMessage' is assigned a value but never used.","'showSuccessMessage' is assigned a value but never used.","'setShowSuccessMessage' is assigned a value but never used.",{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"451","fix":"463"},{"desc":"449","fix":"464"},{"desc":"465","fix":"466"},{"desc":"453","fix":"467"},{"desc":"468","fix":"469"},{"desc":"457","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"473","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},"Update the dependencies array to be: [cartsUpdated, id]",{"range":"480","text":"481"},"Update the dependencies array to be: [plantsAPI]",{"range":"482","text":"483"},"Update the dependencies array to be: [handleSearch, searchTerm]",{"range":"484","text":"485"},"Update the dependencies array to be: [carts.length, cartsAPI]",{"range":"486","text":"487"},"Update the dependencies array to be: [quantities, updateTotalMoney]",{"range":"488","text":"489"},"Update the dependencies array to be: [clientAPI, id]",{"range":"490","text":"491"},"Update the dependencies array to be: [orderAPI, orders.length]",{"range":"492","text":"493"},{"range":"494","text":"483"},{"range":"495","text":"481"},"Update the dependencies array to be: [id, onCartUpdate]",{"range":"496","text":"497"},{"range":"498","text":"485"},"Update the dependencies array to be: [id, quantities]",{"range":"499","text":"500"},{"range":"501","text":"489"},"Update the dependencies array to be: [id]",{"range":"502","text":"503"},"Update the dependencies array to be: [id, reloadComment]",{"range":"504","text":"505"},{"range":"506","text":"505"},"Update the dependencies array to be: [carts.length, id]",{"range":"507","text":"508"},"Update the dependencies array to be: [id, orders]",{"range":"509","text":"510"},[975,989],"[cartsUpdated, id]",[2505,2507],"[plantsAPI]",[3149,3161],"[handleSearch, searchTerm]",[1477,1491],"[carts.length, cartsAPI]",[1590,1602],"[quantities, updateTotalMoney]",[956,960],"[clientAPI, id]",[1285,1300],"[orderAPI, orders.length]",[1177,1179],[1002,1016],[1300,1314],"[id, onCartUpdate]",[3687,3699],[1340,1352],"[id, quantities]",[1447,1459],[1395,1397],"[id]",[6820,6835],"[id, reloadComment]",[7805,7820],[1582,1596],"[carts.length, id]",[1376,1384],"[id, orders]"]